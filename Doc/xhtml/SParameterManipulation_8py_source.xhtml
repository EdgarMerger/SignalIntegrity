<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>SignalIntegrity: PySI/SignalIntegrity/SParameters/SParameterManipulation.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="AppIcon2.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">SignalIntegrity
   &#160;<span id="projectnumber">1.0</span>
   </div>
   <div id="projectbrief">Signal Integrity Tools in Python</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_9f547b81759383aec2306b218b0dab5a.xhtml">PySI</a></li><li class="navelem"><a class="el" href="dir_2cc7b0cfb725d5673deca6a948f2d34c.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_1bf39f07a2a123beea45b51924050d16.xhtml">SParameters</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">SParameterManipulation.py</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceSignalIntegrity_1_1SParameters_1_1SParameterManipulation.xhtml">    1</a></span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="stringliteral"> s-parameter manipulations base class</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"># Teledyne LeCroy Inc. (&quot;COMPANY&quot;) CONFIDENTIAL</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"># Unpublished Copyright (c) 2015-2016 Peter J. Pupalaikis and Teledyne LeCroy,</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"># All Rights Reserved.</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"># </span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"># Explicit license in accompanying README.txt file.  If you don&#39;t have that file</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"># or do not agree to the terms in that file, then you are not licensed to use</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"># this material whatsoever.</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">from</span> numpy <span class="keyword">import</span> linalg,dot,diag</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">import</span> math</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">class </span><a class="code" href="classSignalIntegrity_1_1SParameters_1_1SParameterManipulation_1_1SParameterManipulation.xhtml">SParameterManipulation</a>(object):</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;Class for manipulations on s-parameters involving passivity, causality, etc.&quot;&quot;&quot;</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <span class="comment"># locations where the largest singular value exceeds 1 are locations</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    <span class="comment"># where there are passivity violations</span></div><div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1SParameters_1_1SParameterManipulation_1_1SParameterManipulation.xhtml">   19</a></span>&#160;    <span class="keyword">def </span>_LargestSingularValues(self):</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;        <span class="keywordflow">return</span> [linalg.svd(m,full_matrices=<span class="keyword">False</span>,compute_uv=<span class="keyword">False</span>)[0]</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;            <span class="keywordflow">for</span> m <span class="keywordflow">in</span> self.m_d]</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1SParameters_1_1SParameterManipulation_1_1SParameterManipulation.xhtml#a39c856ddb77d77db3db1944a18fe6009">EnforcePassivity</a>(self,maxSingularValue=1.):</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;Enforces passivity on the s-parameters.</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="stringliteral">        @param maxSingularValue (optional) float maximum singular value allowed</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="stringliteral">        Enforces passivity by clipping all singular values to a maximum value.</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="stringliteral">        the optional maximum value allows for adjusting devices with gain to a maximum</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="stringliteral">        value.  For passive devices, the maximum singular value is the default value of 1.</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        <span class="keywordflow">for</span> n <span class="keywordflow">in</span> range(len(self.m_d)):</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;            (u,s,vh)=linalg.svd(self.m_d[n],full_matrices=1,compute_uv=1)</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            <span class="keywordflow">for</span> si <span class="keywordflow">in</span> range(len(s)):</div><div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1SParameters_1_1SParameterManipulation_1_1SParameterManipulation.xhtml#a39c856ddb77d77db3db1944a18fe6009">   33</a></span>&#160;                s[si]=min(maxSingularValue,s[si])</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            self.m_d[n]=dot(u,dot(diag(s),vh)).tolist()</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        <span class="keywordflow">return</span> self</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1SParameters_1_1SParameterManipulation_1_1SParameterManipulation.xhtml#a4bb07518fdccfa71483dc4e98eb83083">IsCausal</a>(self,threshold=0.):</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;Checks whether the s-parameters are causal.</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="stringliteral">        @param threshold positive float threshold for causality detection</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="stringliteral">        @return boolean True if the absolute value of all values in the impulse response</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="stringliteral">        of each s-parameter before time zero are less</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="stringliteral">        than the threshold provided otherwise returns False.</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="stringliteral">        </span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="stringliteral">        This is checked by generating the impulse response corresponding to the frequency</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="stringliteral">        response of each s-parameter from and to port combination.</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="keywordflow">for</span> toPort <span class="keywordflow">in</span> range(self.m_P):</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            <span class="keywordflow">for</span> fromPort <span class="keywordflow">in</span> range(self.m_P):</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                fr=self.FrequencyResponse(toPort,fromPort)</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                ir=fr.ImpulseResponse()</div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1SParameters_1_1SParameterManipulation_1_1SParameterManipulation.xhtml#a4bb07518fdccfa71483dc4e98eb83083">   50</a></span>&#160;                <span class="keywordflow">if</span> ir <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">False</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                <span class="keywordflow">else</span>:</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                    t=ir.td</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                    Ts=1./ir.td.Fs</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                    <span class="keywordflow">for</span> k <span class="keywordflow">in</span> range(len(t)):</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                        <span class="keywordflow">if</span> t[k]&lt;=-Ts:</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                            <span class="keywordflow">if</span> abs(ir[k])&gt;threshold:</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                                <span class="keywordflow">return</span> <span class="keyword">False</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">True</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1SParameters_1_1SParameterManipulation_1_1SParameterManipulation.xhtml#ab0534e987c24d15ff3bcba7ef74ec1d1">EnforceCausality</a>(self):</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;Enforces causality by setting all of the values before time zero in the impulse</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="stringliteral">        responses of the s-parameters to zero.&quot;&quot;&quot;</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="keywordflow">for</span> toPort <span class="keywordflow">in</span> range(self.m_P):</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            <span class="keywordflow">for</span> fromPort <span class="keywordflow">in</span> range(self.m_P):</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                fr=self.FrequencyResponse(toPort+1,fromPort+1)</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                ir=fr.ImpulseResponse()</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                <span class="keywordflow">if</span> ir <span class="keywordflow">is</span> <span class="keywordflow">not</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1SParameters_1_1SParameterManipulation_1_1SParameterManipulation.xhtml#ab0534e987c24d15ff3bcba7ef74ec1d1">   68</a></span>&#160;                    t=ir.td</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                    Ts=1./ir.td.Fs</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                    <span class="keywordflow">for</span> k <span class="keywordflow">in</span> range(len(t)):</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                        <span class="keywordflow">if</span> t[k]&lt;=-Ts:</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                            ir[k]=0.</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                    fr=ir.FrequencyResponse()</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                    frv=fr.Response()</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                    <span class="keywordflow">for</span> n <span class="keywordflow">in</span> range(len(frv)):</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                        self.m_d[n][toPort][fromPort]=frv[n]</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keywordflow">return</span> self</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1SParameters_1_1SParameterManipulation_1_1SParameterManipulation.xhtml#a537884def79fedd9611365a1de55471f">WaveletDenoise</a>(self,threshold=0.0001):</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;Denoises the s-parameters</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="stringliteral">        @param threshold (optional) float threshold for the wavelets (defaults to 0.0001).</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="stringliteral">        Denoises the s-parameter by computing the wavelet transform of the impulse response</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="stringliteral">        for each s-parameter from and to port combination and keeping only the wavelets whoe</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="stringliteral">        absolute value is above the threshold.&quot;&quot;&quot;</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1Wavelets.xhtml">SignalIntegrity.Wavelets</a> <span class="keyword">import</span> WaveletDaubechies4</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        w=WaveletDaubechies4()</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keywordflow">for</span> toPort <span class="keywordflow">in</span> range(self.m_P):</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            <span class="keywordflow">for</span> fromPort <span class="keywordflow">in</span> range(self.m_P):</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                fr=self.FrequencyResponse(toPort,fromPort)</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                ir=fr.ImpulseResponse()</div><div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1SParameters_1_1SParameterManipulation_1_1SParameterManipulation.xhtml#a537884def79fedd9611365a1de55471f">   90</a></span>&#160;                <span class="keywordflow">if</span> ir <span class="keywordflow">is</span> <span class="keywordflow">not</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                    irl=len(ir)</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                    nirl=int(pow(2.,math.ceil(math.log(float(irl))/math.log(2.))))</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                    ir=ir._Pad(nirl)</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                    y=ir.Values()</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                    Y=w.DWT(y)</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                    Y=[0. <span class="keywordflow">if</span> abs(Yv) &lt;= threshold <span class="keywordflow">else</span> Yv <span class="keywordflow">for</span> Yv <span class="keywordflow">in</span> Y]</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                    y=w.IDWT(Y)</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                    <span class="comment">#ir.x=y</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                    <span class="comment"># @todo get rid of this hack</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                    ir.__init__(ir.TimeDescriptor(),y)</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                    ir=ir._Pad(irl)</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                    fr=ir.FrequencyResponse()</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                    frv=fr.Response()</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                    <span class="keywordflow">for</span> n <span class="keywordflow">in</span> range(len(frv)):</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                        self.m_d[n][toPort][fromPort]=frv[n]</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keywordflow">return</span> self</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1SParameters_1_1SParameterManipulation_1_1SParameterManipulation.xhtml#a979f42e9c8bf72ce90999a24da8a839d">PortReorder</a>(self,pr):</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;Reorders the ports to port ordering of the port numbers supplied.</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="stringliteral">        @param pr list of integer one-based port numbers</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="stringliteral">        @return new instance of reordered s-parameters</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keyword">import</span> copy</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        sp=copy.deepcopy(self)</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        pr=[p-1 <span class="keywordflow">for</span> p <span class="keywordflow">in</span> pr] <span class="comment"># convert to 0 based indices</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        sp.m_d=[[[sp.m_d[n][pr[r]][pr[c]]</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                <span class="keywordflow">for</span> c <span class="keywordflow">in</span> range(len(pr))]</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                    <span class="keywordflow">for</span> r <span class="keywordflow">in</span> range(len(pr))]</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                        <span class="keywordflow">for</span> n <span class="keywordflow">in</span> range(len(sp.m_d))]</div><div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1SParameters_1_1SParameterManipulation_1_1SParameterManipulation.xhtml#a979f42e9c8bf72ce90999a24da8a839d">  119</a></span>&#160;        <span class="keywordflow">return</span> sp</div><div class="ttc" id="classSignalIntegrity_1_1SParameters_1_1SParameterManipulation_1_1SParameterManipulation_xhtml_a537884def79fedd9611365a1de55471f"><div class="ttname"><a href="classSignalIntegrity_1_1SParameters_1_1SParameterManipulation_1_1SParameterManipulation.xhtml#a537884def79fedd9611365a1de55471f">SignalIntegrity.SParameters.SParameterManipulation.SParameterManipulation.WaveletDenoise</a></div><div class="ttdeci">def WaveletDenoise(self, threshold=0.0001)</div><div class="ttdoc">Denoises the s-parameters. </div><div class="ttdef"><b>Definition:</b> <a href="SParameterManipulation_8py_source.xhtml#l00090">SParameterManipulation.py:90</a></div></div>
<div class="ttc" id="classSignalIntegrity_1_1SParameters_1_1SParameterManipulation_1_1SParameterManipulation_xhtml_a39c856ddb77d77db3db1944a18fe6009"><div class="ttname"><a href="classSignalIntegrity_1_1SParameters_1_1SParameterManipulation_1_1SParameterManipulation.xhtml#a39c856ddb77d77db3db1944a18fe6009">SignalIntegrity.SParameters.SParameterManipulation.SParameterManipulation.EnforcePassivity</a></div><div class="ttdeci">def EnforcePassivity(self, maxSingularValue=1.)</div><div class="ttdoc">Enforces passivity on the s-parameters. </div><div class="ttdef"><b>Definition:</b> <a href="SParameterManipulation_8py_source.xhtml#l00033">SParameterManipulation.py:33</a></div></div>
<div class="ttc" id="namespaceSignalIntegrity_1_1Wavelets_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Wavelets.xhtml">SignalIntegrity.Wavelets</a></div><div class="ttdef"><b>Definition:</b> <a href="Wavelets_2____init_____8py_source.xhtml#l00001">__init__.py:1</a></div></div>
<div class="ttc" id="classSignalIntegrity_1_1SParameters_1_1SParameterManipulation_1_1SParameterManipulation_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1SParameters_1_1SParameterManipulation_1_1SParameterManipulation.xhtml">SignalIntegrity.SParameters.SParameterManipulation.SParameterManipulation</a></div><div class="ttdoc">Class for manipulations on s-parameters involving passivity, causality, etc. </div><div class="ttdef"><b>Definition:</b> <a href="SParameterManipulation_8py_source.xhtml#l00019">SParameterManipulation.py:19</a></div></div>
<div class="ttc" id="classSignalIntegrity_1_1SParameters_1_1SParameterManipulation_1_1SParameterManipulation_xhtml_ab0534e987c24d15ff3bcba7ef74ec1d1"><div class="ttname"><a href="classSignalIntegrity_1_1SParameters_1_1SParameterManipulation_1_1SParameterManipulation.xhtml#ab0534e987c24d15ff3bcba7ef74ec1d1">SignalIntegrity.SParameters.SParameterManipulation.SParameterManipulation.EnforceCausality</a></div><div class="ttdeci">def EnforceCausality(self)</div><div class="ttdoc">Enforces causality by setting all of the values before time zero in the impulse responses of the s-pa...</div><div class="ttdef"><b>Definition:</b> <a href="SParameterManipulation_8py_source.xhtml#l00068">SParameterManipulation.py:68</a></div></div>
<div class="ttc" id="classSignalIntegrity_1_1SParameters_1_1SParameterManipulation_1_1SParameterManipulation_xhtml_a979f42e9c8bf72ce90999a24da8a839d"><div class="ttname"><a href="classSignalIntegrity_1_1SParameters_1_1SParameterManipulation_1_1SParameterManipulation.xhtml#a979f42e9c8bf72ce90999a24da8a839d">SignalIntegrity.SParameters.SParameterManipulation.SParameterManipulation.PortReorder</a></div><div class="ttdeci">def PortReorder(self, pr)</div><div class="ttdoc">Reorders the ports to port ordering of the port numbers supplied. </div><div class="ttdef"><b>Definition:</b> <a href="SParameterManipulation_8py_source.xhtml#l00119">SParameterManipulation.py:119</a></div></div>
<div class="ttc" id="classSignalIntegrity_1_1SParameters_1_1SParameterManipulation_1_1SParameterManipulation_xhtml_a4bb07518fdccfa71483dc4e98eb83083"><div class="ttname"><a href="classSignalIntegrity_1_1SParameters_1_1SParameterManipulation_1_1SParameterManipulation.xhtml#a4bb07518fdccfa71483dc4e98eb83083">SignalIntegrity.SParameters.SParameterManipulation.SParameterManipulation.IsCausal</a></div><div class="ttdeci">def IsCausal(self, threshold=0.)</div><div class="ttdoc">Checks whether the s-parameters are causal. </div><div class="ttdef"><b>Definition:</b> <a href="SParameterManipulation_8py_source.xhtml#l00050">SParameterManipulation.py:50</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
