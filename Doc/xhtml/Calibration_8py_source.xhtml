<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>SignalIntegrity: SignalIntegrity/SignalIntegrity/Lib/Measurement/Calibration/Calibration.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="AppIcon2.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">SignalIntegrity
   &#160;<span id="projectnumber">1.0.5</span>
   </div>
   <div id="projectbrief">Signal Integrity Tools in Python</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_16b8a29acabeefd95795d500a3b14bd8.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_fb554d60be346e469553b0331604b584.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_ba9856180bcd39f2b51d38e1b9ddb228.xhtml">Lib</a></li><li class="navelem"><a class="el" href="dir_64597e4b29af68bffc48ff23d2e6147e.xhtml">Measurement</a></li><li class="navelem"><a class="el" href="dir_dcfb6f296b70e457fa328c698135798b.xhtml">Calibration</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Calibration.py</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration.xhtml">    1</a></span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="stringliteral">Calibration</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"># Copyright (c) 2018 Teledyne LeCroy, Inc.</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"># All rights reserved worldwide.</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">#</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"># This file is part of SignalIntegrity.</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">#</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"># SignalIntegrity is free software: You can redistribute it and/or modify it under the terms</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"># of the GNU General Public License as published by the Free Software Foundation, either</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"># version 3 of the License, or any later version.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">#</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"># This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"># without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"># See the GNU General Public License for more details.</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">#</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"># You should have received a copy of the GNU General Public License along with this program.</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"># If not, see &lt;https://www.gnu.org/licenses/&gt;</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1ErrorTerms_1_1ErrorTerms.xhtml">SignalIntegrity.Lib.Measurement.Calibration.ErrorTerms</a> <span class="keyword">import</span> ErrorTerms</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">from</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameters_1_1SParameters.xhtml">SignalIntegrity.Lib.SParameters.SParameters</a> <span class="keyword">import</span> SParameters</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">from</span> numpy <span class="keyword">import</span> hstack,vstack,matrix</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">class </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml">Calibration</a>(object):</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;Generates calibrated s-parameter measurements&quot;&quot;&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    FillInTransferThru=<span class="keyword">True</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a09488d31cef60d14cb3ebfe3f29b963b">__init__</a>(self,ports,f,calibrationList=[]):</div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml">   29</a></span>&#160;        <span class="stringliteral">&quot;&quot;&quot;Constructor</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="stringliteral">        @param ports number of ports in the calibration.</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="stringliteral">        @param f instance of class FrequencyList (or list of frequencies).</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="stringliteral">        @param calibrationList (optional) list of instances of class CalibrationMeasurement</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="stringliteral">        @see CalibrationMeasurement</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#ac5a965d3aaf532842d02995e58c647e0">ports</a>=ports</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a633de4b0c14ca52ea2432a3c8a5c4c31">f</a>=f</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a8da5dc0c13d32bfb119255f7ac781b21">ET</a>=<span class="keywordtype">None</span></div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a09488d31cef60d14cb3ebfe3f29b963b">   38</a></span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#aa13609521a462705a084ede48a53fc27">calibrationMatrix</a>=[[[] <span class="keywordflow">for</span> _ <span class="keywordflow">in</span> range(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#ac5a965d3aaf532842d02995e58c647e0">ports</a>)]</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                                <span class="keywordflow">for</span> _ <span class="keywordflow">in</span> range(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#ac5a965d3aaf532842d02995e58c647e0">ports</a>)]</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#af59f1f79c72d4d05439ca44797972ba0">AddMeasurements</a>(calibrationList)</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#aab91ae2e037c39b631a69273c277bfe9">__getitem__</a>(self,item): <span class="keywordflow">return</span> self.ET[item]</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;overloads [item]</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="stringliteral">    @param item integer row of error terms matrix to access</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="stringliteral">    @return a row of the error terms matrix</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="stringliteral">    @remark</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="stringliteral">    This method is used when access the error terms matrix like self[r][c] which</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="stringliteral">    would acess an instance of class ErrorTerms for receive port r and driven port c.</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="stringliteral">    @see ErrorTerms</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a810fdc262754b6d21f5acd0e280d4daf">__len__</a>(self): <span class="keywordflow">return</span> len(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a633de4b0c14ca52ea2432a3c8a5c4c31">f</a>)</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;overloads len()</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="stringliteral">    @return the number of rows in the error terms (which is the number of ports).</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#aab91ae2e037c39b631a69273c277bfe9">   54</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a083ffd246159ff7b709c6e158f43b76b">Fixtures</a>(self):</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;Fixtures</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="stringliteral">        @return the error terms as fixtures</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a97348b9e4c449174b1e735563e3a8a9c">CalculateErrorTerms</a>()</div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a810fdc262754b6d21f5acd0e280d4daf">   59</a></span>&#160;        <span class="keywordflow">return</span> [<a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameters_1_1SParameters.xhtml">SParameters</a>(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a633de4b0c14ca52ea2432a3c8a5c4c31">f</a>,[</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                vstack((hstack((matrix(self[n].Fixture(p)[0][0]),</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                matrix(self[n].Fixture(p)[0][1]))),</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                        hstack((matrix(self[n].Fixture(p)[1][0]),</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                                matrix(self[n].Fixture(p)[1][1]))))).tolist()</div><div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a083ffd246159ff7b709c6e158f43b76b">   64</a></span>&#160;                    <span class="keywordflow">for</span> n <span class="keywordflow">in</span> range(len(self))]) <span class="keywordflow">for</span> p <span class="keywordflow">in</span> range(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#ac5a965d3aaf532842d02995e58c647e0">ports</a>)]</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a46ccb545422874893d93095446f7c5ac">WriteToFile</a>(self,filename):</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;Writes the error terms to a file</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="stringliteral">        @param filename name of the file to write the error terms to.</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        Fixture=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a083ffd246159ff7b709c6e158f43b76b">Fixtures</a>()</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="keywordflow">for</span> p <span class="keywordflow">in</span> range(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#ac5a965d3aaf532842d02995e58c647e0">ports</a>):</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            Fixture[p].<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a46ccb545422874893d93095446f7c5ac">WriteToFile</a>(filename+str(p+1))</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keywordflow">return</span> self</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#af59f1f79c72d4d05439ca44797972ba0">AddMeasurements</a>(self,calibrationList=[]):</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;Adds calibration measurements</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="stringliteral">        @param calibrationList list of instances of class CalibrationMeasurement.</span></div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a46ccb545422874893d93095446f7c5ac">   76</a></span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a8da5dc0c13d32bfb119255f7ac781b21">ET</a>=<span class="keywordtype">None</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="keywordflow">for</span> calibrationMeasurement <span class="keywordflow">in</span> calibrationList:</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            <span class="keywordflow">if</span> calibrationMeasurement.type==<span class="stringliteral">&#39;reflect&#39;</span>:</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                portDriven=calibrationMeasurement.port</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                otherPort=portDriven</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#aa13609521a462705a084ede48a53fc27">calibrationMatrix</a>[otherPort][portDriven].\</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                    append(calibrationMeasurement)</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <span class="keywordflow">elif</span> (calibrationMeasurement.type==<span class="stringliteral">&#39;thru&#39;</span>) <span class="keywordflow">or</span>\</div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#af59f1f79c72d4d05439ca44797972ba0">   85</a></span>&#160;                (calibrationMeasurement.type==<span class="stringliteral">&#39;xtalk&#39;</span>):</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                portDriven=calibrationMeasurement.portDriven</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                otherPort=calibrationMeasurement.otherPort</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#aa13609521a462705a084ede48a53fc27">calibrationMatrix</a>[otherPort][portDriven].\</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                    append(calibrationMeasurement)</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keywordflow">return</span> self</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a97348b9e4c449174b1e735563e3a8a9c">CalculateErrorTerms</a>(self,force=False):</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;Calculates the error terms</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="stringliteral">        @param force (optional) boolean whether to force it to calculate the error terms.</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="stringliteral">        @remark</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="stringliteral">        If error terms have not been calculated or force, then the error terms are calculated</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="stringliteral">        from instances of CalibrationMeasurement provided during the calibration.&quot;&quot;&quot;</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordflow">if</span> (<span class="keywordflow">not</span> self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a8da5dc0c13d32bfb119255f7ac781b21">ET</a> <span class="keywordflow">is</span> <span class="keywordtype">None</span>) <span class="keywordflow">and</span> (<span class="keywordflow">not</span> force):</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <span class="keywordflow">return</span> self</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a8da5dc0c13d32bfb119255f7ac781b21">ET</a>=[<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1ErrorTerms_1_1ErrorTerms.xhtml">ErrorTerms</a>().Initialize(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#ac5a965d3aaf532842d02995e58c647e0">ports</a>) <span class="keywordflow">for</span> _ <span class="keywordflow">in</span> range(len(self))]</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keywordflow">for</span> port <span class="keywordflow">in</span> range(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#ac5a965d3aaf532842d02995e58c647e0">ports</a>):</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            measurementList=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#aa13609521a462705a084ede48a53fc27">calibrationMatrix</a>[port][port]</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="keywordflow">for</span> n <span class="keywordflow">in</span> range(len(self)):</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                hatGamma=[measurement.gamma[n] <span class="keywordflow">for</span> measurement <span class="keywordflow">in</span> measurementList]</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                Gamma=[measurement.Gamma[n][0][0] <span class="keywordflow">for</span> measurement <span class="keywordflow">in</span> measurementList]</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                self[n].ReflectCalibration(hatGamma,Gamma,port)</div><div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a97348b9e4c449174b1e735563e3a8a9c">  106</a></span>&#160;        <span class="keywordflow">for</span> otherPort <span class="keywordflow">in</span> range(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#ac5a965d3aaf532842d02995e58c647e0">ports</a>):</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            <span class="keywordflow">for</span> drivenPort <span class="keywordflow">in</span> range(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#ac5a965d3aaf532842d02995e58c647e0">ports</a>):</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                <span class="keywordflow">if</span> (otherPort != drivenPort):</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                    measurementList=self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#aa13609521a462705a084ede48a53fc27">calibrationMatrix</a>[otherPort][drivenPort]</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                    xtalkMeasurementList=[]</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                    thruMeasurementList=[]</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                    <span class="keywordflow">for</span> meas <span class="keywordflow">in</span> measurementList:</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                        <span class="keywordflow">if</span> meas.type==<span class="stringliteral">&#39;xtalk&#39;</span>:</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                            xtalkMeasurementList.append(meas)</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                        <span class="keywordflow">elif</span> meas.type==<span class="stringliteral">&#39;thru&#39;</span>:</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                            thruMeasurementList.append(meas)</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                    <span class="keywordflow">if</span> len(xtalkMeasurementList)!=0:</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                        <span class="keywordflow">for</span> n <span class="keywordflow">in</span> range(len(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a633de4b0c14ca52ea2432a3c8a5c4c31">f</a>)):</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                            self[n].ExCalibration(xtalkMeasurementList[0].b2a1[n],</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                                    otherPort,drivenPort)</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                    <span class="keywordflow">if</span> len(thruMeasurementList)!=0:</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                        <span class="keywordflow">for</span> n <span class="keywordflow">in</span> range(len(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a633de4b0c14ca52ea2432a3c8a5c4c31">f</a>)):</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                            b1a1=[measurement.b1a1[n]</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                                  <span class="keywordflow">for</span> measurement <span class="keywordflow">in</span> thruMeasurementList]</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                            b2a1=[measurement.b2a1[n]</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                                  <span class="keywordflow">for</span> measurement <span class="keywordflow">in</span> thruMeasurementList]</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                            S=[measurement.S[n] <span class="keywordflow">for</span> measurement <span class="keywordflow">in</span> thruMeasurementList]</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                            self[n].ThruCalibration(b1a1,b2a1,S,otherPort,drivenPort)</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="keywordflow">if</span> Calibration.FillInTransferThru:</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            <span class="keywordflow">for</span> n <span class="keywordflow">in</span> range(len(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a633de4b0c14ca52ea2432a3c8a5c4c31">f</a>)):</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                self[n].TransferThruCalibration()</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordflow">return</span> self</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keyword">def </span><a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#ac257ff0d436f9c02507349f82ece9e56">DutCalculation</a>(self,sRaw):</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;calculates the Dut.\n</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="stringliteral">        converts the raw measured s-parameters of the DUT into calibrated s-parameter</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="stringliteral">        measurements.</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="stringliteral">        @param sRaw instance of class SParameters of the raw measurement of the DUT.</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="stringliteral">        @return instance of class SParameters of the calibrated DUT measurement.</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a97348b9e4c449174b1e735563e3a8a9c">CalculateErrorTerms</a>()</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameters_1_1SParameters.xhtml">SParameters</a>(self.<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a633de4b0c14ca52ea2432a3c8a5c4c31">f</a>,[self[n].<a class="code" href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#ac257ff0d436f9c02507349f82ece9e56">DutCalculation</a>(sRaw[n])</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                                   <span class="keywordflow">for</span> n <span class="keywordflow">in</span> range(len(self))])</div><div class="ttc" id="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml">SignalIntegrity.Lib.Measurement.Calibration.Calibration.Calibration</a></div><div class="ttdoc">Generates calibrated s-parameter measurements. </div><div class="ttdef"><b>Definition:</b> <a href="Calibration_8py_source.xhtml#l00029">Calibration.py:29</a></div></div>
<div class="ttc" id="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration_xhtml_a810fdc262754b6d21f5acd0e280d4daf"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a810fdc262754b6d21f5acd0e280d4daf">SignalIntegrity.Lib.Measurement.Calibration.Calibration.Calibration.__len__</a></div><div class="ttdeci">def __len__(self)</div><div class="ttdoc">overloads len() </div><div class="ttdef"><b>Definition:</b> <a href="Calibration_8py_source.xhtml#l00059">Calibration.py:59</a></div></div>
<div class="ttc" id="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameters_1_1SParameters_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1SParameters_1_1SParameters_1_1SParameters.xhtml">SignalIntegrity.Lib.SParameters.SParameters.SParameters</a></div><div class="ttdoc">Class containing s-parameters. </div><div class="ttdef"><b>Definition:</b> <a href="SParameters_8py_source.xhtml#l00039">SParameters.py:39</a></div></div>
<div class="ttc" id="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration_xhtml_a8da5dc0c13d32bfb119255f7ac781b21"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a8da5dc0c13d32bfb119255f7ac781b21">SignalIntegrity.Lib.Measurement.Calibration.Calibration.Calibration.ET</a></div><div class="ttdeci">ET</div><div class="ttdef"><b>Definition:</b> <a href="Calibration_8py_source.xhtml#l00041">Calibration.py:41</a></div></div>
<div class="ttc" id="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration_xhtml_af59f1f79c72d4d05439ca44797972ba0"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#af59f1f79c72d4d05439ca44797972ba0">SignalIntegrity.Lib.Measurement.Calibration.Calibration.Calibration.AddMeasurements</a></div><div class="ttdeci">def AddMeasurements(self, calibrationList=[])</div><div class="ttdoc">Adds calibration measurements. </div><div class="ttdef"><b>Definition:</b> <a href="Calibration_8py_source.xhtml#l00085">Calibration.py:85</a></div></div>
<div class="ttc" id="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration_xhtml_aa13609521a462705a084ede48a53fc27"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#aa13609521a462705a084ede48a53fc27">SignalIntegrity.Lib.Measurement.Calibration.Calibration.Calibration.calibrationMatrix</a></div><div class="ttdeci">calibrationMatrix</div><div class="ttdef"><b>Definition:</b> <a href="Calibration_8py_source.xhtml#l00042">Calibration.py:42</a></div></div>
<div class="ttc" id="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1ErrorTerms_1_1ErrorTerms_xhtml"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1ErrorTerms_1_1ErrorTerms.xhtml">SignalIntegrity.Lib.Measurement.Calibration.ErrorTerms.ErrorTerms</a></div><div class="ttdoc">Error terms for VNA and TDR based s-parameter calculations. </div><div class="ttdef"><b>Definition:</b> <a href="ErrorTerms_8py_source.xhtml#l00045">ErrorTerms.py:45</a></div></div>
<div class="ttc" id="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration_xhtml_a083ffd246159ff7b709c6e158f43b76b"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a083ffd246159ff7b709c6e158f43b76b">SignalIntegrity.Lib.Measurement.Calibration.Calibration.Calibration.Fixtures</a></div><div class="ttdeci">def Fixtures(self)</div><div class="ttdoc">Fixtures. </div><div class="ttdef"><b>Definition:</b> <a href="Calibration_8py_source.xhtml#l00064">Calibration.py:64</a></div></div>
<div class="ttc" id="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration_xhtml_ac257ff0d436f9c02507349f82ece9e56"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#ac257ff0d436f9c02507349f82ece9e56">SignalIntegrity.Lib.Measurement.Calibration.Calibration.Calibration.DutCalculation</a></div><div class="ttdeci">def DutCalculation(self, sRaw)</div><div class="ttdoc">calculates the Dut. </div><div class="ttdef"><b>Definition:</b> <a href="Calibration_8py_source.xhtml#l00150">Calibration.py:150</a></div></div>
<div class="ttc" id="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration_xhtml_ac5a965d3aaf532842d02995e58c647e0"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#ac5a965d3aaf532842d02995e58c647e0">SignalIntegrity.Lib.Measurement.Calibration.Calibration.Calibration.ports</a></div><div class="ttdeci">ports</div><div class="ttdef"><b>Definition:</b> <a href="Calibration_8py_source.xhtml#l00039">Calibration.py:39</a></div></div>
<div class="ttc" id="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration_xhtml_a633de4b0c14ca52ea2432a3c8a5c4c31"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a633de4b0c14ca52ea2432a3c8a5c4c31">SignalIntegrity.Lib.Measurement.Calibration.Calibration.Calibration.f</a></div><div class="ttdeci">f</div><div class="ttdef"><b>Definition:</b> <a href="Calibration_8py_source.xhtml#l00040">Calibration.py:40</a></div></div>
<div class="ttc" id="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration_xhtml_a46ccb545422874893d93095446f7c5ac"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a46ccb545422874893d93095446f7c5ac">SignalIntegrity.Lib.Measurement.Calibration.Calibration.Calibration.WriteToFile</a></div><div class="ttdeci">def WriteToFile(self, filename)</div><div class="ttdoc">Writes the error terms to a file. </div><div class="ttdef"><b>Definition:</b> <a href="Calibration_8py_source.xhtml#l00076">Calibration.py:76</a></div></div>
<div class="ttc" id="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration_xhtml_a97348b9e4c449174b1e735563e3a8a9c"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a97348b9e4c449174b1e735563e3a8a9c">SignalIntegrity.Lib.Measurement.Calibration.Calibration.Calibration.CalculateErrorTerms</a></div><div class="ttdeci">def CalculateErrorTerms(self, force=False)</div><div class="ttdoc">Calculates the error terms. </div><div class="ttdef"><b>Definition:</b> <a href="Calibration_8py_source.xhtml#l00106">Calibration.py:106</a></div></div>
<div class="ttc" id="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration_xhtml_aab91ae2e037c39b631a69273c277bfe9"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#aab91ae2e037c39b631a69273c277bfe9">SignalIntegrity.Lib.Measurement.Calibration.Calibration.Calibration.__getitem__</a></div><div class="ttdeci">def __getitem__(self, item)</div><div class="ttdoc">overloads [item] </div><div class="ttdef"><b>Definition:</b> <a href="Calibration_8py_source.xhtml#l00054">Calibration.py:54</a></div></div>
<div class="ttc" id="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration_xhtml_a09488d31cef60d14cb3ebfe3f29b963b"><div class="ttname"><a href="classSignalIntegrity_1_1Lib_1_1Measurement_1_1Calibration_1_1Calibration_1_1Calibration.xhtml#a09488d31cef60d14cb3ebfe3f29b963b">SignalIntegrity.Lib.Measurement.Calibration.Calibration.Calibration.__init__</a></div><div class="ttdeci">def __init__(self, ports, f, calibrationList=[])</div><div class="ttdoc">Constructor. </div><div class="ttdef"><b>Definition:</b> <a href="Calibration_8py_source.xhtml#l00038">Calibration.py:38</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
