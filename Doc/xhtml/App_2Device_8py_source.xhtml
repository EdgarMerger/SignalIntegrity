<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>SignalIntegrity: SignalIntegrity/SignalIntegrity/App/Device.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="AppIcon2.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">SignalIntegrity
   &#160;<span id="projectnumber">1.1.6</span>
   </div>
   <div id="projectbrief">Signal Integrity Tools in Python</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_16b8a29acabeefd95795d500a3b14bd8.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_fb554d60be346e469553b0331604b584.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_970ef3fb0b92f0060bb9423c44cad0f7.xhtml">App</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Device.py</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceSignalIntegrity_1_1App_1_1Device.xhtml">    1</a></span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="stringliteral">Device.py</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"># Copyright (c) 2018 Teledyne LeCroy, Inc.</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"># All rights reserved worldwide.</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">#</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"># This file is part of SignalIntegrity.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">#</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"># SignalIntegrity is free software: You can redistribute it and/or modify it under the terms</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"># of the GNU General Public License as published by the Free Software Foundation, either</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"># version 3 of the License, or any later version.</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">#</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"># This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"># without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"># See the GNU General Public License for more details.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">#</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"># You should have received a copy of the GNU General Public License along with this program.</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"># If not, see &lt;https://www.gnu.org/licenses/&gt;</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1PartProperty.xhtml">SignalIntegrity.App.PartProperty</a> <span class="keyword">import</span> *</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1PartPicture.xhtml">SignalIntegrity.App.PartPicture</a> <span class="keyword">import</span> *</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1DeviceNetListLine.xhtml">SignalIntegrity.App.DeviceNetListLine</a> <span class="keyword">import</span> DeviceNetListLine</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">import</span> math</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">class </span>Device(object):</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="keyword">def </span>__init__(self,netlist,propertiesList,partPicture):</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        self.netlist=netlist</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        <span class="keywordflow">if</span> propertiesList==<span class="keywordtype">None</span>:</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            propertiesList=[]</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        self.propertiesList=propertiesList</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        self.partPicture=partPicture</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        self.selected=<span class="keyword">False</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        self.AddPartProperty(PartPropertyReferenceDesignator(<span class="stringliteral">&#39;&#39;</span>))</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keyword">def </span>DrawDevice(self,canvas,grid,x,y,pinsConnectedList=None):</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        self.CreateVisiblePropertiesList()</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        self.partPicture.current.Selected(self.selected).DrawDevice(canvas,grid,(x,y),pinsConnectedList)</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keyword">def </span>IsAt(self,coord,augmentor,distance):</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        <span class="keywordflow">return</span> self.partPicture.current.IsAt(coord,augmentor,distance)</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keyword">def </span>IsIn(self,coord0,coord1,coord0Augmentor,coord1Augmentor):</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="keywordflow">return</span> self.partPicture.current.IsIn(coord0,coord1,coord0Augmentor,coord1Augmentor)</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keyword">def </span>WhereInPart(self,coord):</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="keywordflow">return</span> self.partPicture.current.WhereInPart(coord)</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keyword">def </span>PartPropertyByName(self,name):</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <span class="keywordflow">for</span> partProperty <span class="keywordflow">in</span> self.propertiesList:</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            <span class="keywordflow">if</span> partProperty[<span class="stringliteral">&#39;PropertyName&#39;</span>] == name:</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                <span class="keywordflow">return</span> partProperty</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <span class="keywordflow">return</span> <span class="keywordtype">None</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keyword">def </span>PartPropertyByKeyword(self,keyword):</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="keywordflow">for</span> partProperty <span class="keywordflow">in</span> self.propertiesList:</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            <span class="keywordflow">if</span> partProperty[<span class="stringliteral">&#39;Keyword&#39;</span>] == keyword:</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                <span class="keywordflow">return</span> partProperty</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keywordflow">return</span> <span class="keywordtype">None</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keyword">def </span>AddPartProperty(self,PartProperty):</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <span class="keywordflow">if</span> self[PartProperty[<span class="stringliteral">&#39;Keyword&#39;</span>]] <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            self.propertiesList=self.propertiesList+[PartProperty]</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keyword">def </span>__getitem__(self,item):</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keywordflow">return</span> self.PartPropertyByKeyword(item)</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keyword">def </span>__setitem__(self,item,value):</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="keywordflow">for</span> p <span class="keywordflow">in</span> range(len(self.propertiesList)):</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            <span class="keywordflow">if</span> self.propertiesList[p][<span class="stringliteral">&#39;Keyword&#39;</span>] == item:</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                self.propertiesList[p]=value</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                <span class="keywordflow">return</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="keywordflow">raise</span> ValueError</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keyword">def </span>NetListLine(self):</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="keywordflow">return</span> self.netlist.NetListLine(self)</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keyword">def </span>PinCoordinates(self):</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="keywordflow">return</span> self.partPicture.current.PinCoordinates()</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keyword">def </span>CreateVisiblePropertiesList(self):</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        visiblePartPropertyList=[]</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="keywordflow">for</span> partProperty <span class="keywordflow">in</span> self.propertiesList:</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            propertyString=partProperty.PropertyString(stype=<span class="stringliteral">&#39;attr&#39;</span>)</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            <span class="keywordflow">if</span> propertyString != <span class="stringliteral">&#39;&#39;</span>:</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                visiblePartPropertyList.append(propertyString)</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        self.partPicture.current.InsertVisiblePartProperties(visiblePartPropertyList)</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keyword">def </span>Waveform(self):</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="keyword">import</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib.xhtml">SignalIntegrity.Lib</a> <span class="keyword">as</span> si</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        wfTypeProperty=self[<span class="stringliteral">&#39;wftype&#39;</span>]</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="keywordflow">if</span> wfTypeProperty <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            waveform = <span class="keywordtype">None</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordflow">else</span>:</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            wfType=wfTypeProperty.GetValue()</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            <span class="keywordflow">if</span> wfType <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                waveform = <span class="keywordtype">None</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <span class="keywordflow">elif</span> wfType==<span class="stringliteral">&#39;file&#39;</span>:</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                fileName = self[<span class="stringliteral">&#39;wffile&#39;</span>].PropertyString(stype=<span class="stringliteral">&#39;raw&#39;</span>)</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                ext=str.lower(fileName).split(<span class="stringliteral">&#39;.&#39;</span>)[-1]</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                <span class="keywordflow">if</span> ext == <span class="stringliteral">&#39;si&#39;</span>:</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                    <span class="keyword">from</span> <a class="code" href="namespaceSignalIntegrity_1_1App_1_1SignalIntegrityAppHeadless.xhtml">SignalIntegrity.App.SignalIntegrityAppHeadless</a> <span class="keyword">import</span> ProjectWaveform</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                    waveform=ProjectWaveform(fileName,self[<span class="stringliteral">&#39;wfprojname&#39;</span>].GetValue())</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                    <span class="keywordflow">if</span> waveform <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                        <span class="keywordflow">raise</span> si.SignalIntegrityExceptionWaveform(<span class="stringliteral">&#39;project file: &#39;</span>+fileName+<span class="stringliteral">&#39; could not produce waveform: &#39;</span>+self[<span class="stringliteral">&#39;wfprojname&#39;</span>].GetValue())</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                <span class="keywordflow">else</span>:</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                    waveform = si.td.wf.Waveform().ReadFromFile(fileName)</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <span class="keywordflow">elif</span> wfType == <span class="stringliteral">&#39;step&#39;</span>:</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                amplitude=float(self[<span class="stringliteral">&#39;a&#39;</span>].GetValue())</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                startTime=float(self[<span class="stringliteral">&#39;t0&#39;</span>].GetValue())</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                risetime=float(self[<span class="stringliteral">&#39;rt&#39;</span>].GetValue())</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                waveform = si.td.wf.StepWaveform(self.WaveformTimeDescriptor(),amplitude,startTime,risetime)</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            <span class="keywordflow">elif</span> wfType == <span class="stringliteral">&#39;pulse&#39;</span>:</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                amplitude=float(self[<span class="stringliteral">&#39;a&#39;</span>].GetValue())</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                startTime=float(self[<span class="stringliteral">&#39;t0&#39;</span>].GetValue())</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                pulseWidth=float(self[<span class="stringliteral">&#39;w&#39;</span>].GetValue())</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                risetime=float(self[<span class="stringliteral">&#39;rt&#39;</span>].GetValue())</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                waveform = si.td.wf.PulseWaveform(self.WaveformTimeDescriptor(),amplitude,startTime,pulseWidth,risetime)</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            <span class="keywordflow">elif</span> wfType == <span class="stringliteral">&#39;prbs&#39;</span>:</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                polynomial=int(self[<span class="stringliteral">&#39;prbs&#39;</span>].GetValue())</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                bitrate=float(self[<span class="stringliteral">&#39;br&#39;</span>].GetValue())</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                risetime=float(self[<span class="stringliteral">&#39;rt&#39;</span>].GetValue())</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                amplitude=float(self[<span class="stringliteral">&#39;a&#39;</span>].GetValue())</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                delay=float(self[<span class="stringliteral">&#39;t0&#39;</span>].GetValue())</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                waveform = si.prbs.PseudoRandomWaveform(polynomial,bitrate,amplitude,risetime,delay,self.WaveformTimeDescriptor())</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            <span class="keywordflow">elif</span> wfType == <span class="stringliteral">&#39;clock&#39;</span>:</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                clockrate=float(self[<span class="stringliteral">&#39;f&#39;</span>].GetValue())</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                risetime=float(self[<span class="stringliteral">&#39;rt&#39;</span>].GetValue())</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                amplitude=float(self[<span class="stringliteral">&#39;a&#39;</span>].GetValue())</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                delay=float(self[<span class="stringliteral">&#39;t0&#39;</span>].GetValue())</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                waveform = si.prbs.ClockWaveform(clockrate,amplitude,risetime,delay,self.WaveformTimeDescriptor())</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <span class="keywordflow">elif</span> wfType == <span class="stringliteral">&#39;sine&#39;</span>:</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                amplitude=float(self[<span class="stringliteral">&#39;a&#39;</span>].GetValue())</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                frequency=float(self[<span class="stringliteral">&#39;f&#39;</span>].GetValue())</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                phase=float(self[<span class="stringliteral">&#39;ph&#39;</span>].GetValue())</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                waveform = si.td.wf.SineWaveform(self.WaveformTimeDescriptor(),amplitude,frequency,phase)</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            <span class="keywordflow">elif</span> wfType == <span class="stringliteral">&#39;noise&#39;</span>:</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                sigma=float(self[<span class="stringliteral">&#39;vrms&#39;</span>].GetValue())</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                waveform = si.td.wf.NoiseWaveform(self.WaveformTimeDescriptor(),sigma)</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keywordflow">return</span> waveform</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keyword">def </span>WaveformTimeDescriptor(self):</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keyword">import</span> SignalIntegrity <span class="keyword">as</span> si</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        Fs=float(self[<span class="stringliteral">&#39;fs&#39;</span>].GetValue())</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        K=int(math.ceil(Fs*float(self[<span class="stringliteral">&#39;dur&#39;</span>].GetValue())))</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        horOffset=float(self[<span class="stringliteral">&#39;ho&#39;</span>].GetValue())</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordflow">return</span> si.td.wf.TimeDescriptor(horOffset,K,Fs)</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="keyword">class </span>DeviceFromProject(object):</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keyword">def </span>__init__(self,deviceProject):</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        ports=<span class="keywordtype">None</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">for</span> partPropertyProject <span class="keywordflow">in</span> deviceProject[<span class="stringliteral">&#39;PartProperties&#39;</span>]:</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <span class="keywordflow">if</span> partPropertyProject[<span class="stringliteral">&#39;Keyword&#39;</span>] == <span class="stringliteral">&#39;ports&#39;</span>:</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                ports=int(partPropertyProject[<span class="stringliteral">&#39;Value&#39;</span>])</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                <span class="keywordflow">break</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        className=deviceProject[<span class="stringliteral">&#39;ClassName&#39;</span>]</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        self.result=<span class="keywordtype">None</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <span class="keywordflow">if</span> className==<span class="stringliteral">&#39;DeviceFile&#39;</span>:</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            self.result=DeviceFile([PartPropertyDescription(<span class="stringliteral">&#39;Variable Port File&#39;</span>),PartPropertyPorts(ports,<span class="keyword">False</span>)],PartPictureVariableSpecifiedPorts(ports))</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="keywordflow">elif</span> className==<span class="stringliteral">&#39;DeviceUnknown&#39;</span>:</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            self.result=DeviceUnknown([PartPropertyDescription(<span class="stringliteral">&#39;Variable Port Unknown&#39;</span>),PartPropertyPorts(ports,<span class="keyword">False</span>)],PartPictureVariableUnknown(ports))</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="keywordflow">elif</span> className==<span class="stringliteral">&#39;DeviceSystem&#39;</span>:</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            self.result=DeviceSystem([PartPropertyDescription(<span class="stringliteral">&#39;Variable Port System&#39;</span>),PartPropertyPorts(ports,<span class="keyword">False</span>)],PartPictureVariableSystem(ports))</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="keywordflow">else</span>:</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            <span class="keywordflow">for</span> device <span class="keywordflow">in</span> DeviceList+DeviceListSystem+DeviceListUnknown:</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                <span class="keywordflow">if</span> (str(device.__class__).split(<span class="stringliteral">&#39;.&#39;</span>)[-1].strip(<span class="stringliteral">&#39;\&#39;&gt;&#39;</span>) == className):</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                    devicePorts = device[<span class="stringliteral">&#39;ports&#39;</span>]</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                    <span class="keywordflow">if</span> (devicePorts <span class="keywordflow">is</span> <span class="keywordtype">None</span>):</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                        match=<span class="keyword">True</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                    <span class="keywordflow">elif</span> (devicePorts.GetValue() == ports):</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                        match=<span class="keyword">True</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                    <span class="keywordflow">else</span>:</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                        match=<span class="keyword">False</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                    <span class="keywordflow">if</span> match:</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                        self.result=copy.deepcopy(device)</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                        <span class="keywordflow">break</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <span class="keywordflow">if</span> self.result <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="keywordflow">raise</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="keywordflow">for</span> partPropertyProject <span class="keywordflow">in</span> deviceProject[<span class="stringliteral">&#39;PartProperties&#39;</span>]:</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            devicePartProperty=self.result[partPropertyProject[<span class="stringliteral">&#39;Keyword&#39;</span>]]</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            <span class="keywordflow">for</span> propertyItemName <span class="keywordflow">in</span> partPropertyProject.dict:</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                <span class="keywordflow">if</span> partPropertyProject.dict[propertyItemName].dict[<span class="stringliteral">&#39;write&#39;</span>]:</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                    devicePartProperty[propertyItemName]=partPropertyProject.GetValue(propertyItemName)</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        partPictureList=self.result.partPicture.partPictureClassList</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        self.result.partPicture=PartPictureFromProject(partPictureList,deviceProject[<span class="stringliteral">&#39;PartPicture&#39;</span>],ports).result</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keyword">class </span>DeviceFile(Device):</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList,partPicture):</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        netlist=DeviceNetListLine(values=[(<span class="stringliteral">&#39;file&#39;</span>,<span class="keyword">True</span>)])</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Files&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;File&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;D?&#39;</span>),PartPropertyFileName()]+propertiesList,partPicture)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="keyword">class </span>DeviceUnknown(Device):</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList,partPicture):</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        netlist=DeviceNetListLine(devicename=<span class="stringliteral">&#39;unknown&#39;</span>)</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Unknowns&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;Unknown&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;U?&#39;</span>)]+propertiesList,partPicture)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="keyword">class </span>DeviceSystem(Device):</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList,partPicture):</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        netlist=DeviceNetListLine(devicename=<span class="stringliteral">&#39;system&#39;</span>,showReference=<span class="keyword">False</span>,showports=<span class="keyword">False</span>,values=[(<span class="stringliteral">&#39;file&#39;</span>,<span class="keyword">True</span>)])</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Systems&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;System&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;D?&#39;</span>),PartPropertyFileName()]+propertiesList,partPicture)</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="keyword">class </span>DeviceResistor(Device):</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList,partPicture):</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        netlist=DeviceNetListLine(partname=<span class="stringliteral">&#39;R&#39;,values=[(&#39;</span><span class="stringliteral">r&#39;,False)])</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="stringliteral">        Device.__init__(self,netlist,[PartPropertyCategory(&#39;Resistors&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;Resistor&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;R?&#39;</span>),PartPropertyResistance()]+propertiesList,partPicture)</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keyword">class </span>DeviceCapacitor(Device):</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList,partPicture):</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        netlist=DeviceNetListLine(partname=<span class="stringliteral">&#39;C&#39;</span>,values=[(<span class="stringliteral">&#39;c&#39;</span>,<span class="keyword">False</span>),(<span class="stringliteral">&#39;esr&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;df&#39;</span>,<span class="keyword">True</span>)])</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Capacitors&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;Capacitor&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;C?&#39;</span>),PartPropertyCapacitance(),PartPropertyDissipationFactor(),PartPropertyESR()]+propertiesList,partPicture)</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="keyword">class </span>DeviceInductor(Device):</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList,partPicture):</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        netlist=DeviceNetListLine(partname=<span class="stringliteral">&#39;L&#39;</span>,values=[(<span class="stringliteral">&#39;l&#39;</span>,<span class="keyword">False</span>)])</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Inductors&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;Inductor&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;L?&#39;</span>),PartPropertyInductance()]+propertiesList,partPicture)</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="keyword">class </span>DeviceMutual(Device):</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keyword">def </span>__init__(self):</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        netlist=DeviceNetListLine(partname=<span class="stringliteral">&#39;M&#39;</span>,values=[(<span class="stringliteral">&#39;l&#39;</span>,<span class="keyword">False</span>)])</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Inductors&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;Mutual&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;M?&#39;</span>),PartPropertyPorts(4),PartPropertyInductance(),PartPropertyDescription(<span class="stringliteral">&#39;Four Port Mutual Inductance&#39;</span>)],partPicture=PartPictureVariableMutual())</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="keyword">class </span>DeviceIdealTransformer(Device):</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="keyword">def </span>__init__(self):</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        netlist=DeviceNetListLine(partname=<span class="stringliteral">&#39;idealtransformer&#39;</span>,values=[(<span class="stringliteral">&#39;tr&#39;</span>,<span class="keyword">False</span>)])</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Inductors&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;IdealTransformer&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;D?&#39;</span>),PartPropertyPorts(4),PartPropertyTurnsRatio(),PartPropertyDescription(<span class="stringliteral">&#39;Four Port IdealTransformer&#39;</span>)],partPicture=PartPictureVariableIdealTransformer())</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="keyword">class </span>Port(Device):</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="keyword">def </span>__init__(self,portNumber=1):</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        netlist=DeviceNetListLine(devicename=<span class="stringliteral">&#39;port&#39;</span>,showReference=<span class="keyword">False</span>,showports=<span class="keyword">False</span>,values=[(<span class="stringliteral">&#39;pn&#39;</span>,<span class="keyword">False</span>)])</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Special&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;Port&#39;</span>),PartPropertyDescription(<span class="stringliteral">&#39;Port&#39;</span>),PartPropertyPorts(1),PartPropertyPortNumber(portNumber)],partPicture=PartPictureVariablePort())</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="keyword">class </span>DeviceGround(Device):</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="keyword">def </span>__init__(self):</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        netlist=DeviceNetListLine(partname=<span class="stringliteral">&#39;ground&#39;</span>)</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Miscellaneous&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;Ground&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;G?&#39;</span>),PartPropertyDescription(<span class="stringliteral">&#39;Ground&#39;</span>),PartPropertyPorts(1)],partPicture=PartPictureVariableGround())</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="keyword">class </span>DeviceOpen(Device):</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <span class="keyword">def </span>__init__(self):</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        netlist=DeviceNetListLine(partname=<span class="stringliteral">&#39;open&#39;</span>)</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Miscellaneous&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;Open&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;O?&#39;</span>),PartPropertyDescription(<span class="stringliteral">&#39;Open&#39;</span>),PartPropertyPorts(1)],partPicture=PartPictureVariableOpen())</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="keyword">class </span>DeviceDirectionalCoupler(Device):</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList,partPicture):</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        netlist=DeviceNetListLine(partname=<span class="stringliteral">&#39;directionalcoupler&#39;</span>)</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Miscellaneous&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;Directional Coupler&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;D?&#39;</span>)]+propertiesList,partPicture)    </div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="keyword">class </span>DeviceVoltageSource(Device):</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList,partPicture):</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        netlist=DeviceNetListLine(devicename=<span class="stringliteral">&#39;voltagesource&#39;</span>)</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Sources&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;Voltage Source&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;VS?&#39;</span>),PartPropertyWaveformFileName(),PartPropertyWaveformType(<span class="stringliteral">&#39;file&#39;</span>),PartPropertyWaveformProjectName(<span class="stringliteral">&#39;&#39;</span>)]+propertiesList,partPicture)</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keyword">class </span>DeviceVoltageStepGenerator(Device):</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList,partPicture):</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        netlist=DeviceNetListLine(devicename=<span class="stringliteral">&#39;voltagesource&#39;</span>)</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Generators&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;Voltage Step Generator&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;VG?&#39;</span>),</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        PartPropertyHorizontalOffset(),PartPropertyDuration(),PartPropertyStartTime(),PartPropertyRisetime(),PartPropertySampleRate(),PartPropertyVoltageAmplitude(),PartPropertyWaveformType(<span class="stringliteral">&#39;step&#39;</span>)]+propertiesList,partPicture)</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="keyword">class </span>DeviceVoltagePulseGenerator(Device):</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList,partPicture):</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        netlist=DeviceNetListLine(devicename=<span class="stringliteral">&#39;voltagesource&#39;</span>)</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Generators&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;Voltage Pulse Generator&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;VG?&#39;</span>),</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        PartPropertyHorizontalOffset(),PartPropertyDuration(),PartPropertyStartTime(),PartPropertyRisetime(),PartPropertyPulseWidth(),PartPropertySampleRate(),PartPropertyVoltageAmplitude(),PartPropertyWaveformType(<span class="stringliteral">&#39;pulse&#39;</span>)]+propertiesList,partPicture)</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="keyword">class </span>DeviceVoltagePRBSGenerator(Device):</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList,partPicture):</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        netlist=DeviceNetListLine(devicename=<span class="stringliteral">&#39;voltagesource&#39;</span>)</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Generators&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;Voltage PRBS Generator&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;VG?&#39;</span>),</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        PartPropertyHorizontalOffset(),PartPropertyDuration(),PartPropertyStartTime(),PartPropertyBitRate(),PartPropertyRisetime(),PartPropertyPRBSPolynomial(),PartPropertySampleRate(),PartPropertyVoltageAmplitude(),PartPropertyWaveformType(<span class="stringliteral">&#39;prbs&#39;</span>)]+propertiesList,partPicture)</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="keyword">class </span>DeviceVoltageClockGenerator(Device):</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList,partPicture):</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        netlist=DeviceNetListLine(devicename=<span class="stringliteral">&#39;voltagesource&#39;</span>)</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Generators&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;Voltage Clock Generator&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;VG?&#39;</span>),</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        PartPropertyHorizontalOffset(),PartPropertyDuration(),PartPropertyStartTime(),PartPropertyFrequency(),PartPropertyRisetime(),PartPropertySampleRate(),PartPropertyVoltageAmplitude(),PartPropertyWaveformType(<span class="stringliteral">&#39;clock&#39;</span>)]+propertiesList,partPicture)</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="keyword">class </span>DeviceVoltageSineGenerator(Device):</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList,partPicture):</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        netlist=DeviceNetListLine(devicename=<span class="stringliteral">&#39;voltagesource&#39;</span>)</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Generators&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;Voltage Sine Generator&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;VG?&#39;</span>),</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        PartPropertyHorizontalOffset(),PartPropertyDuration(),PartPropertySampleRate(),PartPropertyVoltageAmplitude(),PartPropertyFrequency(),PartPropertyPhase(),PartPropertyWaveformType(<span class="stringliteral">&#39;sine&#39;</span>)]+propertiesList,partPicture)</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="keyword">class </span>DeviceCurrentSource(Device):</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList,partPicture):</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        netlist=DeviceNetListLine(devicename=<span class="stringliteral">&#39;currentsource&#39;</span>)</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Sources&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;Current Source&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;CS?&#39;</span>),PartPropertyWaveformFileName(),PartPropertyWaveformType(<span class="stringliteral">&#39;file&#39;</span>),PartPropertyWaveformProjectName(<span class="stringliteral">&#39;&#39;</span>)]+propertiesList,partPicture)</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="keyword">class </span>DeviceCurrentStepGenerator(Device):</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList,partPicture):</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        netlist=DeviceNetListLine(devicename=<span class="stringliteral">&#39;currentsource&#39;</span>)</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Generators&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;Current Step Generator&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;CG?&#39;</span>),</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        PartPropertyHorizontalOffset(),PartPropertyDuration(),PartPropertyStartTime(),PartPropertyRisetime(),PartPropertySampleRate(),PartPropertyCurrentAmplitude(),PartPropertyWaveformType(<span class="stringliteral">&#39;step&#39;</span>)]+propertiesList,partPicture)</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="keyword">class </span>DeviceCurrentPulseGenerator(Device):</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList,partPicture):</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        netlist=DeviceNetListLine(devicename=<span class="stringliteral">&#39;currentsource&#39;</span>)</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Generators&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;Current Pulse Generator&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;CG?&#39;</span>),</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        PartPropertyHorizontalOffset(),PartPropertyDuration(),PartPropertyStartTime(),PartPropertyRisetime(),PartPropertyPulseWidth(),PartPropertySampleRate(),PartPropertyCurrentAmplitude(),PartPropertyWaveformType(<span class="stringliteral">&#39;pulse&#39;</span>)]+propertiesList,partPicture)</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="keyword">class </span>DeviceCurrentSineGenerator(Device):</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList,partPicture):</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        netlist=DeviceNetListLine(devicename=<span class="stringliteral">&#39;currentsource&#39;</span>)</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Generators&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;Current Sine Generator&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;CG?&#39;</span>),</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        PartPropertyHorizontalOffset(),PartPropertyDuration(),PartPropertySampleRate(),PartPropertyCurrentAmplitude(),PartPropertyFrequency(),PartPropertyPhase(),PartPropertyWaveformType(<span class="stringliteral">&#39;sine&#39;</span>)]+propertiesList,partPicture)</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="keyword">class </span>DeviceMeasurement(Device):</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <span class="keyword">def </span>__init__(self):</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        netlist=DeviceNetListLine(devicename=<span class="stringliteral">&#39;meas&#39;</span>,showReference=<span class="keyword">False</span>,showports=<span class="keyword">False</span>)</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Special&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;Measure&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;VM?&#39;</span>),PartPropertyDescription(<span class="stringliteral">&#39;Measure&#39;</span>),PartPropertyWaveformFileName(),PartPropertyWaveformType(<span class="stringliteral">&#39;file&#39;</span>),PartPropertyWaveformProjectName(<span class="stringliteral">&#39;&#39;</span>)],PartPictureVariableMeasureProbe())</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="keyword">class </span>DeviceOutput(Device):</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    <span class="keyword">def </span>__init__(self):</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        netlist=DeviceNetListLine(devicename=<span class="stringliteral">&#39;output&#39;</span>,showReference=<span class="keyword">False</span>,showports=<span class="keyword">False</span>)</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Special&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;Output&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;VO?&#39;</span>),PartPropertyDescription(<span class="stringliteral">&#39;Output&#39;</span>),</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            PartPropertyVoltageGain(1.0),PartPropertyVoltageOffset(0.0),PartPropertyDelay(0.0)],PartPictureVariableProbe())</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        self[<span class="stringliteral">&#39;gain&#39;</span>][<span class="stringliteral">&#39;Visible&#39;</span>]=<span class="keyword">False</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        self[<span class="stringliteral">&#39;offset&#39;</span>][<span class="stringliteral">&#39;Visible&#39;</span>]=<span class="keyword">False</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        self[<span class="stringliteral">&#39;td&#39;</span>][<span class="stringliteral">&#39;Visible&#39;</span>]=<span class="keyword">False</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="keyword">class </span>DeviceStim(Device):</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    <span class="keyword">def </span>__init__(self):</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        netlist=DeviceNetListLine(devicename=<span class="stringliteral">&#39;stim&#39;</span>,showReference=<span class="keyword">False</span>,showports=<span class="keyword">False</span>)</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Special&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;Stim&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;M?&#39;</span>),PartPropertyWeight(1.),PartPropertyDescription(<span class="stringliteral">&#39;Stim&#39;</span>)],PartPictureVariableStim())</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="keyword">class </span>DevicePowerMixedModeConverter(Device):</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keyword">def </span>__init__(self):</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        netlist=DeviceNetListLine(partname=<span class="stringliteral">&#39;mixedmode&#39;</span>)</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Miscellaneous&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;Power Mixed Mode Converter&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;MM?&#39;</span>),PartPropertyDescription(<span class="stringliteral">&#39;Power Mixed Mode Converter&#39;</span>),PartPropertyPorts(4)],PartPictureVariablePowerMixedModeConverter())</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="keyword">class </span>DeviceVoltageMixedModeConverter(Device):</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <span class="keyword">def </span>__init__(self):</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        netlist=DeviceNetListLine(partname=<span class="stringliteral">&#39;mixedmode voltage&#39;</span>)</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Miscellaneous&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;Voltage Mixed Mode Converter&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;MM?&#39;</span>),PartPropertyDescription(<span class="stringliteral">&#39;Voltage Mixed Mode Converter&#39;</span>),PartPropertyPorts(4)],PartPictureVariableVoltageMixedModeConverter())</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="keyword">class </span>DeviceVoltageControlledVoltageSourceFourPort(Device):</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList):</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        netlist=DeviceNetListLine(partname=<span class="stringliteral">&#39;voltagecontrolledvoltagesource&#39;</span>,values=[(<span class="stringliteral">&#39;gain&#39;</span>,<span class="keyword">False</span>)])</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Dependent Sources&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;VoltageControlledVoltageSource&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;D?&#39;</span>),PartPropertyVoltageGain(1.0)]+propertiesList,PartPictureVariableVoltageControlledVoltageSourceFourPort())</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="keyword">class </span>DeviceVoltageAmplifierTwoPort(Device):</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList):</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        netlist=DeviceNetListLine(partname=<span class="stringliteral">&#39;voltageamplifier&#39;</span>,values=[(<span class="stringliteral">&#39;gain&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;zi&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;zo&#39;</span>,<span class="keyword">True</span>)])</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Amplifiers&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;VoltageAmplifier&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;D?&#39;</span>),PartPropertyVoltageGain(1.0),PartPropertyInputImpedance(1e8),PartPropertyOutputImpedance(0.)]+propertiesList,PartPictureVariableVoltageAmplifierTwoPort())</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="keyword">class </span>DeviceVoltageAmplifierFourPort(Device):</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList):</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        netlist=DeviceNetListLine(partname=<span class="stringliteral">&#39;voltageamplifier&#39;</span>,values=[(<span class="stringliteral">&#39;gain&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;zi&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;zo&#39;</span>,<span class="keyword">True</span>)])</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Amplifiers&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;VoltageAmplifier&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;D?&#39;</span>),PartPropertyVoltageGain(1.0),PartPropertyInputImpedance(1e8),PartPropertyOutputImpedance(0.)]+propertiesList,PartPictureVariableVoltageAmplifierFourPort())</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="keyword">class </span>DeviceOperationalAmplifier(Device):</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList):</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        netlist=DeviceNetListLine(partname=<span class="stringliteral">&#39;opamp&#39;</span>,values=[(<span class="stringliteral">&#39;gain&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;zi&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;zo&#39;</span>,<span class="keyword">True</span>)])</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Amplifiers&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;OperationalAmplifier&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;D?&#39;</span>),PartPropertyVoltageGain(100e3),PartPropertyInputImpedance(1e8),PartPropertyOutputImpedance(0.)]+propertiesList,PartPictureVariableOperationalAmplifier())</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="keyword">class </span>DeviceCurrentControlledCurrentSourceFourPort(Device):</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList):</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        netlist=DeviceNetListLine(partname=<span class="stringliteral">&#39;currentcontrolledcurrentsource&#39;</span>,values=[(<span class="stringliteral">&#39;gain&#39;</span>,<span class="keyword">False</span>)])</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Dependent Sources&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;CurrentControlledCurrentSource&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;D?&#39;</span>),PartPropertyCurrentGain(1.0)]+propertiesList,PartPictureVariableCurrentControlledCurrentSourceFourPort())</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="keyword">class </span>DeviceCurrentAmplifierTwoPort(Device):</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList):</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        netlist=DeviceNetListLine(partname=<span class="stringliteral">&#39;currentamplifier&#39;</span>,values=[(<span class="stringliteral">&#39;gain&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;zi&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;zo&#39;</span>,<span class="keyword">True</span>)])</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Amplifiers&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;CurrentAmplifier&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;D?&#39;</span>),PartPropertyCurrentGain(1.0),PartPropertyInputImpedance(0.),PartPropertyOutputImpedance(1e8)]+propertiesList,PartPictureVariableCurrentAmplifierTwoPort())</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="keyword">class </span>DeviceCurrentAmplifierFourPort(Device):</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList):</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        netlist=DeviceNetListLine(partname=<span class="stringliteral">&#39;currentamplifier&#39;</span>,values=[(<span class="stringliteral">&#39;gain&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;zi&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;zo&#39;</span>,<span class="keyword">True</span>)])</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Amplifiers&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;CurrentAmplifier&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;D?&#39;</span>),PartPropertyCurrentGain(1.0),PartPropertyInputImpedance(0.),PartPropertyOutputImpedance(1e8)]+propertiesList,PartPictureVariableCurrentAmplifierFourPort())</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="keyword">class </span>DeviceVoltageControlledCurrentSourceFourPort(Device):</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList):</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        netlist=DeviceNetListLine(partname=<span class="stringliteral">&#39;voltagecontrolledcurrentsource&#39;</span>,values=[(<span class="stringliteral">&#39;gain&#39;</span>,<span class="keyword">False</span>)])</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Dependent Sources&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;VoltageControlledCurrentSource&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;D?&#39;</span>),PartPropertyTransconductance(1.0)]+propertiesList,PartPictureVariableVoltageControlledCurrentSourceFourPort())</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="keyword">class </span>DeviceTransconductanceAmplifierTwoPort(Device):</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList):</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        netlist=DeviceNetListLine(partname=<span class="stringliteral">&#39;transconductanceamplifier&#39;</span>,values=[(<span class="stringliteral">&#39;gain&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;zi&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;zo&#39;</span>,<span class="keyword">True</span>)])</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Amplifiers&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;TransconductanceAmplifier&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;D?&#39;</span>),PartPropertyTransconductance(1.0),PartPropertyInputImpedance(1e8),PartPropertyOutputImpedance(1e8)]+propertiesList,PartPictureVariableTransconductanceAmplifierTwoPort())</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="keyword">class </span>DeviceTransconductanceAmplifierFourPort(Device):</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList):</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        netlist=DeviceNetListLine(partname=<span class="stringliteral">&#39;transconductanceamplifier&#39;</span>,values=[(<span class="stringliteral">&#39;gain&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;zi&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;zo&#39;</span>,<span class="keyword">True</span>)])</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Amplifiers&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;TransconductanceAmplifier&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;D?&#39;</span>),PartPropertyTransconductance(1.0),PartPropertyInputImpedance(1e8),PartPropertyOutputImpedance(1e8)]+propertiesList,PartPictureVariableTransconductanceAmplifierFourPort())</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="keyword">class </span>DeviceCurrentControlledVoltageSourceFourPort(Device):</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList):</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        netlist=DeviceNetListLine(partname=<span class="stringliteral">&#39;currentcontrolledvoltagesource&#39;</span>,values=[(<span class="stringliteral">&#39;gain&#39;</span>,<span class="keyword">False</span>)])</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Dependent Sources&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;CurrentControlledVoltageSource&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;D?&#39;</span>),PartPropertyTransresistance(1.0)]+propertiesList,PartPictureVariableCurrentControlledVoltageSourceFourPort())</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="keyword">class </span>DeviceTransresistanceAmplifierTwoPort(Device):</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList):</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        netlist=DeviceNetListLine(partname=<span class="stringliteral">&#39;transresistanceamplifier&#39;</span>,values=[(<span class="stringliteral">&#39;gain&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;zi&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;zo&#39;</span>,<span class="keyword">True</span>)])</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Amplifiers&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;TransresistanceAmplifier&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;D?&#39;</span>),PartPropertyTransresistance(1.0),PartPropertyInputImpedance(0.),PartPropertyOutputImpedance(0.)]+propertiesList,PartPictureVariableTransresistanceAmplifierTwoPort())</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="keyword">class </span>DeviceTransresistanceAmplifierFourPort(Device):</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList):</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        netlist=DeviceNetListLine(partname=<span class="stringliteral">&#39;transresistanceamplifier&#39;</span>,values=[(<span class="stringliteral">&#39;gain&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;zi&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;zo&#39;</span>,<span class="keyword">True</span>)])</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Amplifiers&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;TransresistanceAmplifier&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;D?&#39;</span>),PartPropertyTransresistance(1.0),PartPropertyInputImpedance(0.),PartPropertyOutputImpedance(0.)]+propertiesList,PartPictureVariableTransresistanceAmplifierFourPort())</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="keyword">class </span>DeviceTransmissionLine(Device):</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList,partPicture):</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        netlist=DeviceNetListLine(partname=<span class="stringliteral">&#39;tline&#39;</span>,values=[(<span class="stringliteral">&#39;zc&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;td&#39;</span>,<span class="keyword">True</span>)])        </div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;TransmissionLines&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;TransmissionLine&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;T?&#39;</span>),PartPropertyDelay(),PartPropertyCharacteristicImpedance()]+propertiesList,partPicture)</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="keyword">class </span>DeviceTelegrapherTwoPort(Device):</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList,partPicture):</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        netlist=DeviceNetListLine(partname=<span class="stringliteral">&#39;telegrapher&#39;</span>,values=[(<span class="stringliteral">&#39;r&#39;,True),(&#39;</span>rse&#39;,True),(&#39;l&#39;,True),(&#39;g&#39;,True),(&#39;c&#39;,True),(&#39;df&#39;,True),(&#39;sect&#39;,True)])</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;TransmissionLines&#39;</span>),</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                              PartPropertyPartName(<span class="stringliteral">&#39;Telegrapher&#39;</span>),</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;                              PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;T?&#39;</span>),</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;                              PartPropertyResistance(resistance=0.0),</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                              PartPropertyResistanceSkinEffect(),</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                              PartPropertyInductance(),</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                              PartPropertyConductance(),</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                              PartPropertyCapacitance(),</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                              PartPropertyDissipationFactor(),</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                              PartPropertySections(sections=0)]+propertiesList,partPicture)</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="keyword">class </span>DeviceTelegrapherFourPort(Device):</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList,partPicture):</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        netlist=DeviceNetListLine(partname=<span class="stringliteral">&#39;telegrapher&#39;</span>,</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;            values=[(<span class="stringliteral">&#39;rp&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;rsep&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;lp&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;gp&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;cp&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;dfp&#39;</span>,<span class="keyword">True</span>),</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                    (<span class="stringliteral">&#39;rn&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;rsen&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;ln&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;gn&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;cn&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;dfn&#39;</span>,<span class="keyword">True</span>),</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                    (<span class="stringliteral">&#39;lm&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;gm&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;cm&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;dfm&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;sect&#39;</span>,<span class="keyword">True</span>)])</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;TransmissionLines&#39;</span>),</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;                              PartPropertyPartName(<span class="stringliteral">&#39;Telegrapher&#39;</span>),</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                              PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;T?&#39;</span>),</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                              PartPropertyResistance(keyword=<span class="stringliteral">&#39;rp&#39;</span>,descriptionPrefix=<span class="stringliteral">&#39;positive &#39;</span>,resistance=0.0),</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                              PartPropertyResistanceSkinEffect(keyword=<span class="stringliteral">&#39;rsep&#39;</span>,descriptionPrefix=<span class="stringliteral">&#39;positive &#39;</span>),</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                              PartPropertyInductance(keyword=<span class="stringliteral">&#39;lp&#39;</span>,descriptionPrefix=<span class="stringliteral">&#39;positive &#39;</span>),</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                              PartPropertyConductance(keyword=<span class="stringliteral">&#39;gp&#39;</span>,descriptionPrefix=<span class="stringliteral">&#39;positive &#39;</span>),</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                              PartPropertyCapacitance(keyword=<span class="stringliteral">&#39;cp&#39;</span>,descriptionPrefix=<span class="stringliteral">&#39;positive &#39;</span>),</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;                              PartPropertyDissipationFactor(keyword=<span class="stringliteral">&#39;dfp&#39;</span>,descriptionPrefix=<span class="stringliteral">&#39;positive &#39;</span>),</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;                              PartPropertyResistance(keyword=<span class="stringliteral">&#39;rn&#39;</span>,descriptionPrefix=<span class="stringliteral">&#39;negative &#39;</span>,resistance=0.0),</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                              PartPropertyResistanceSkinEffect(keyword=<span class="stringliteral">&#39;rsen&#39;</span>,descriptionPrefix=<span class="stringliteral">&#39;negative &#39;</span>),</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                              PartPropertyInductance(keyword=<span class="stringliteral">&#39;ln&#39;</span>,descriptionPrefix=<span class="stringliteral">&#39;negative &#39;</span>),</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                              PartPropertyConductance(keyword=<span class="stringliteral">&#39;gn&#39;</span>,descriptionPrefix=<span class="stringliteral">&#39;negative &#39;</span>),</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                              PartPropertyCapacitance(keyword=<span class="stringliteral">&#39;cn&#39;</span>,descriptionPrefix=<span class="stringliteral">&#39;negative &#39;</span>),</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                              PartPropertyDissipationFactor(keyword=<span class="stringliteral">&#39;dfn&#39;</span>,descriptionPrefix=<span class="stringliteral">&#39;negative &#39;</span>),</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                              PartPropertyConductance(keyword=<span class="stringliteral">&#39;gm&#39;</span>,descriptionPrefix=<span class="stringliteral">&#39;mutual &#39;</span>),</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                              PartPropertyInductance(keyword=<span class="stringliteral">&#39;lm&#39;</span>,descriptionPrefix=<span class="stringliteral">&#39;mutual &#39;</span>),</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                              PartPropertyCapacitance(keyword=<span class="stringliteral">&#39;cm&#39;</span>,descriptionPrefix=<span class="stringliteral">&#39;mutual &#39;</span>),</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                              PartPropertyDissipationFactor(keyword=<span class="stringliteral">&#39;dfm&#39;</span>,descriptionPrefix=<span class="stringliteral">&#39;mutual &#39;</span>),</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                              PartPropertySections(sections=0)]+propertiesList,partPicture)</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="keyword">class </span>DeviceVoltageNoiseSource(Device):</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList,partPicture):</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        netlist=DeviceNetListLine(devicename=<span class="stringliteral">&#39;voltagesource&#39;</span>)</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Generators&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;Voltage Noise Source&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;VG?&#39;</span>),</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        PartPropertyHorizontalOffset(),PartPropertyDuration(),PartPropertySampleRate(),PartPropertyVoltageRms(),PartPropertyWaveformType(<span class="stringliteral">&#39;noise&#39;</span>)]+propertiesList,partPicture)</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="keyword">class </span>DeviceVoltageOutputProbe(Device):</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    <span class="keyword">def </span>__init__(self):</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        netlist=DeviceNetListLine(devicename=<span class="stringliteral">&#39;differentialvoltageoutput&#39;</span>)</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Special&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;DifferentialVoltageOutput&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;VO?&#39;</span>),PartPropertyDescription(<span class="stringliteral">&#39;Differential Voltage Probe&#39;</span>),PartPropertyPorts(2),</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;            PartPropertyVoltageGain(1.0),PartPropertyVoltageOffset(0.0),PartPropertyDelay(0.0)],PartPictureVariableVoltageProbe())</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        self[<span class="stringliteral">&#39;gain&#39;</span>][<span class="stringliteral">&#39;Visible&#39;</span>]=<span class="keyword">False</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;        self[<span class="stringliteral">&#39;offset&#39;</span>][<span class="stringliteral">&#39;Visible&#39;</span>]=<span class="keyword">False</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        self[<span class="stringliteral">&#39;td&#39;</span>][<span class="stringliteral">&#39;Visible&#39;</span>]=<span class="keyword">False</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;<span class="keyword">class </span>DeviceCurrentOutputProbe(Device):</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    <span class="keyword">def </span>__init__(self):</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        netlist=DeviceNetListLine(devicename=<span class="stringliteral">&#39;currentoutput&#39;</span>)</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Special&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;CurrentOutput&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;VO?&#39;</span>),PartPropertyDescription(<span class="stringliteral">&#39;Current Probe&#39;</span>),PartPropertyPorts(2),</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;            PartPropertyTransresistance(1.0),PartPropertyVoltageOffset(0.0),PartPropertyDelay(0.0)],PartPictureVariableCurrentProbe())</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;        self[<span class="stringliteral">&#39;gain&#39;</span>][<span class="stringliteral">&#39;Visible&#39;</span>]=<span class="keyword">False</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;        self[<span class="stringliteral">&#39;offset&#39;</span>][<span class="stringliteral">&#39;Visible&#39;</span>]=<span class="keyword">False</span></div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;        self[<span class="stringliteral">&#39;td&#39;</span>][<span class="stringliteral">&#39;Visible&#39;</span>]=<span class="keyword">False</span></div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="keyword">class </span>DeviceNPNTransistor(Device):</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    <span class="keyword">def </span>__init__(self,propertiesList):</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;        netlist=DeviceNetListLine(partname=<span class="stringliteral">&#39;npntransistor&#39;</span>,values=[(<span class="stringliteral">&#39;gm&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;rpi&#39;</span>,<span class="keyword">True</span>),(<span class="stringliteral">&#39;ro&#39;</span>,<span class="keyword">True</span>)])</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;        Device.__init__(self,netlist,[PartPropertyCategory(<span class="stringliteral">&#39;Amplifiers&#39;</span>),PartPropertyPartName(<span class="stringliteral">&#39;NPN Transistor&#39;</span>),PartPropertyDefaultReferenceDesignator(<span class="stringliteral">&#39;Q?&#39;</span>),PartPropertyGm(200.0),PartPropertyRpi(200e3),PartPropertyOutputResistance(200e3),PartPropertyPorts(3)]+propertiesList,PartPictureVariableNPNTransister())</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;DeviceList = [</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;              DeviceFile([PartPropertyDescription(<span class="stringliteral">&#39;One Port File&#39;</span>),PartPropertyPorts(1)],PartPictureVariableSpecifiedPorts(1)),</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;              DeviceFile([PartPropertyDescription(<span class="stringliteral">&#39;Two Port File&#39;</span>),PartPropertyPorts(2)],PartPictureVariableSpecifiedPorts(2)),</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;              DeviceFile([PartPropertyDescription(<span class="stringliteral">&#39;Three Port File&#39;</span>),PartPropertyPorts(3)],PartPictureVariableSpecifiedPorts(3)),</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;              DeviceFile([PartPropertyDescription(<span class="stringliteral">&#39;Four Port File&#39;</span>),PartPropertyPorts(4)],PartPictureVariableSpecifiedPorts(4)),</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;              DeviceFile([PartPropertyDescription(<span class="stringliteral">&#39;Variable Port File&#39;</span>),PartPropertyPorts(4,<span class="keyword">False</span>)],PartPictureVariableSpecifiedPorts()),</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;              DeviceResistor([PartPropertyDescription(<span class="stringliteral">&#39;One Port Resistor to Ground&#39;</span>),PartPropertyPorts(1)],PartPictureVariableResistorOnePort()),</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;              DeviceResistor([PartPropertyDescription(<span class="stringliteral">&#39;Two Port Resistor&#39;</span>),PartPropertyPorts(2)],PartPictureVariableResistorTwoPort()),</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;              DeviceCapacitor([PartPropertyDescription(<span class="stringliteral">&#39;One Port Capacitor to Ground&#39;</span>),PartPropertyPorts(1)],PartPictureVariableCapacitorOnePort()),</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;              DeviceCapacitor([PartPropertyDescription(<span class="stringliteral">&#39;Two Port Capacitor&#39;</span>),PartPropertyPorts(2)],PartPictureVariableCapacitorTwoPort()),</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;              DeviceInductor([PartPropertyDescription(<span class="stringliteral">&#39;Two Port Inductor&#39;</span>),PartPropertyPorts(2)],PartPictureVariableInductorTwoPort()),</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;              DeviceMutual(),</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;              DeviceIdealTransformer(),</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;              DeviceGround(),</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;              DeviceOpen(),</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;              DeviceDirectionalCoupler([PartPropertyDescription(<span class="stringliteral">&#39;Three Port Directional Coupler&#39;</span>),PartPropertyPorts(3)],PartPictureVariableDirectionalCouplerThreePort()),</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;              DeviceDirectionalCoupler([PartPropertyDescription(<span class="stringliteral">&#39;Four Port Directional Coupler&#39;</span>),PartPropertyPorts(4)],PartPictureVariableDirectionalCouplerFourPort()),</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;              DeviceTransmissionLine([PartPropertyDescription(<span class="stringliteral">&#39;Two Port Transmission Line&#39;</span>),PartPropertyPorts(2)],PartPictureVariableTransmissionLineTwoPort()),</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;              DeviceTransmissionLine([PartPropertyDescription(<span class="stringliteral">&#39;Four Port Transmission Line&#39;</span>),PartPropertyPorts(4)],PartPictureVariableTransmissionLineFourPort()),</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;              DeviceTelegrapherTwoPort([PartPropertyDescription(<span class="stringliteral">&#39;Two Port Telegrapher&#39;</span>),PartPropertyPorts(2)],PartPictureVariableTransmissionLineTwoPort()),</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;              DeviceTelegrapherFourPort([PartPropertyDescription(<span class="stringliteral">&#39;Four Port Telegrapher&#39;</span>),PartPropertyPorts(4)],PartPictureVariableTransmissionLineDifferential()),</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;              DeviceVoltageSource([PartPropertyDescription(<span class="stringliteral">&#39;One Port Voltage Source&#39;</span>),PartPropertyPorts(1)],PartPictureVariableVoltageSourceOnePort()),</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;              DeviceVoltageSource([PartPropertyDescription(<span class="stringliteral">&#39;Two Port Voltage Source&#39;</span>),PartPropertyPorts(2)],PartPictureVariableVoltageSourceTwoPort()),</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;              DeviceVoltageNoiseSource([PartPropertyDescription(<span class="stringliteral">&#39;One Port Voltage Noise Generator&#39;</span>),PartPropertyPorts(1)],PartPictureVariableVoltageSourceNoiseSourceOnePort()),</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;              DeviceVoltageNoiseSource([PartPropertyDescription(<span class="stringliteral">&#39;Two Port Voltage Noise Generator&#39;</span>),PartPropertyPorts(2)],PartPictureVariableVoltageSourceNoiseSourceTwoPort()),</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;              DeviceVoltageStepGenerator([PartPropertyDescription(<span class="stringliteral">&#39;One Port Voltage Step Generator&#39;</span>),PartPropertyPorts(1)],PartPictureVariableVoltageSourceStepGeneratorOnePort()),</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;              DeviceVoltageStepGenerator([PartPropertyDescription(<span class="stringliteral">&#39;Two Port Voltage Step Generator&#39;</span>),PartPropertyPorts(2)],PartPictureVariableVoltageSourceStepGeneratorTwoPort()),</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;              DeviceVoltagePulseGenerator([PartPropertyDescription(<span class="stringliteral">&#39;One Port Voltage Pulse Generator&#39;</span>),PartPropertyPorts(1)],PartPictureVariableVoltageSourcePulseGeneratorOnePort()),</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;              DeviceVoltagePulseGenerator([PartPropertyDescription(<span class="stringliteral">&#39;Two Port Voltage Pulse Generator&#39;</span>),PartPropertyPorts(2)],PartPictureVariableVoltageSourcePulseGeneratorTwoPort()),</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;              DeviceVoltagePRBSGenerator([PartPropertyDescription(<span class="stringliteral">&#39;One Port Voltage PRBS Generator&#39;</span>),PartPropertyPorts(1)],PartPictureVariableVoltageSourcePRBSGeneratorOnePort()),</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;              DeviceVoltagePRBSGenerator([PartPropertyDescription(<span class="stringliteral">&#39;Two Port Voltage PRBS Generator&#39;</span>),PartPropertyPorts(2)],PartPictureVariableVoltageSourcePRBSGeneratorTwoPort()),</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;              DeviceVoltageClockGenerator([PartPropertyDescription(<span class="stringliteral">&#39;One Port Voltage Clock Generator&#39;</span>),PartPropertyPorts(1)],PartPictureVariableVoltageSourceClockGeneratorOnePort()),</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;              DeviceVoltageClockGenerator([PartPropertyDescription(<span class="stringliteral">&#39;Two Port Voltage Clock Generator&#39;</span>),PartPropertyPorts(2)],PartPictureVariableVoltageSourceClockGeneratorTwoPort()),</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;              DeviceVoltageSineGenerator([PartPropertyDescription(<span class="stringliteral">&#39;One Port Voltage Sine Generator&#39;</span>),PartPropertyPorts(1)],PartPictureVariableVoltageSourceSineGeneratorOnePort()),</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;              DeviceVoltageSineGenerator([PartPropertyDescription(<span class="stringliteral">&#39;Two Port Voltage Sine Generator&#39;</span>),PartPropertyPorts(2)],PartPictureVariableVoltageSourceSineGeneratorTwoPort()),</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;              DeviceCurrentSource([PartPropertyDescription(<span class="stringliteral">&#39;One Port Current Source&#39;</span>),PartPropertyPorts(1)],PartPictureVariableCurrentSourceOnePort()),</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;              DeviceCurrentSource([PartPropertyDescription(<span class="stringliteral">&#39;Two Port Current Source&#39;</span>),PartPropertyPorts(2)],PartPictureVariableCurrentSourceTwoPort()),</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;              DeviceCurrentStepGenerator([PartPropertyDescription(<span class="stringliteral">&#39;One Port Current Step Generator&#39;</span>),PartPropertyPorts(1)],PartPictureVariableCurrentSourceStepGeneratorOnePort()),</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;              DeviceCurrentStepGenerator([PartPropertyDescription(<span class="stringliteral">&#39;Two Port Current Step Generator&#39;</span>),PartPropertyPorts(2)],PartPictureVariableCurrentSourceStepGeneratorTwoPort()),</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;              DeviceCurrentPulseGenerator([PartPropertyDescription(<span class="stringliteral">&#39;One Port Current Pulse Generator&#39;</span>),PartPropertyPorts(1)],PartPictureVariableCurrentSourcePulseGeneratorOnePort()),</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;              DeviceCurrentPulseGenerator([PartPropertyDescription(<span class="stringliteral">&#39;Two Port Current Pulse Generator&#39;</span>),PartPropertyPorts(2)],PartPictureVariableCurrentSourcePulseGeneratorTwoPort()),</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;              DeviceCurrentSineGenerator([PartPropertyDescription(<span class="stringliteral">&#39;One Port Current Sine Generator&#39;</span>),PartPropertyPorts(1)],PartPictureVariableCurrentSourceSineGeneratorOnePort()),</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;              DeviceCurrentSineGenerator([PartPropertyDescription(<span class="stringliteral">&#39;Two Port Current Sine Generator&#39;</span>),PartPropertyPorts(2)],PartPictureVariableCurrentSourceSineGeneratorTwoPort()),</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;              Port(),</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;              DeviceMeasurement(),</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;              DeviceOutput(),</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;              DeviceStim(),</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;              DevicePowerMixedModeConverter(),</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;              DeviceVoltageMixedModeConverter(),</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;              DeviceVoltageControlledVoltageSourceFourPort([PartPropertyDescription(<span class="stringliteral">&#39;Four Port Voltage Controlled Voltage Source&#39;</span>),PartPropertyPorts(4)]),</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;              DeviceVoltageAmplifierTwoPort([PartPropertyDescription(<span class="stringliteral">&#39;Two Port Voltage Amplifier&#39;</span>),PartPropertyPorts(2)]),</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;              DeviceVoltageAmplifierFourPort([PartPropertyDescription(<span class="stringliteral">&#39;Four Port Voltage Amplifier&#39;</span>),PartPropertyPorts(4)]),</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;              DeviceOperationalAmplifier([PartPropertyDescription(<span class="stringliteral">&#39;Operational Amplifier&#39;</span>),PartPropertyPorts(3)]),</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;              DeviceCurrentControlledCurrentSourceFourPort([PartPropertyDescription(<span class="stringliteral">&#39;Four Port Current Controlled Current Source&#39;</span>),PartPropertyPorts(4)]),</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;              DeviceCurrentAmplifierTwoPort([PartPropertyDescription(<span class="stringliteral">&#39;Two Port Current Amplifier&#39;</span>),PartPropertyPorts(2)]),</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;              DeviceCurrentAmplifierFourPort([PartPropertyDescription(<span class="stringliteral">&#39;Four Port Current Amplifier&#39;</span>),PartPropertyPorts(4)]),</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;              DeviceVoltageControlledCurrentSourceFourPort([PartPropertyDescription(<span class="stringliteral">&#39;Four Port Voltage Controlled Current Source&#39;</span>),PartPropertyPorts(4)]),</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;              DeviceTransconductanceAmplifierTwoPort([PartPropertyDescription(<span class="stringliteral">&#39;Two Port Transconductance Amplifier&#39;</span>),PartPropertyPorts(2)]),</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;              DeviceTransconductanceAmplifierFourPort([PartPropertyDescription(<span class="stringliteral">&#39;Four Port Transconductance Amplifier&#39;</span>),PartPropertyPorts(4)]),</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;              DeviceCurrentControlledVoltageSourceFourPort([PartPropertyDescription(<span class="stringliteral">&#39;Four Port Current Controlled Voltage Source&#39;</span>),PartPropertyPorts(4)]),</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;              DeviceTransresistanceAmplifierTwoPort([PartPropertyDescription(<span class="stringliteral">&#39;Two Port Transresistance Amplifier&#39;</span>),PartPropertyPorts(2)]),</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;              DeviceTransresistanceAmplifierFourPort([PartPropertyDescription(<span class="stringliteral">&#39;Four Port Transresistance Amplifier&#39;</span>),PartPropertyPorts(4)]),</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;              DeviceCurrentOutputProbe(),</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;              DeviceVoltageOutputProbe(),</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;              <span class="comment">#DeviceNPNTransistor([PartPropertyDescription(&#39;NPN Transistor&#39;)])</span></div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;              ]</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;DeviceListUnknown = [</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;              DeviceUnknown([PartPropertyDescription(<span class="stringliteral">&#39;One Port Unknown&#39;</span>),PartPropertyPorts(1)],PartPictureVariableUnknown(1)),</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;              DeviceUnknown([PartPropertyDescription(<span class="stringliteral">&#39;Two Port Unknown&#39;</span>),PartPropertyPorts(2)],PartPictureVariableUnknown(2)),</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;              DeviceUnknown([PartPropertyDescription(<span class="stringliteral">&#39;Three Port Unknown&#39;</span>),PartPropertyPorts(3)],PartPictureVariableUnknown(3)),</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;              DeviceUnknown([PartPropertyDescription(<span class="stringliteral">&#39;Four Port Unknown&#39;</span>),PartPropertyPorts(4)],PartPictureVariableUnknown(4)),</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;              DeviceUnknown([PartPropertyDescription(<span class="stringliteral">&#39;Variable Port Unknown&#39;</span>),PartPropertyPorts(4,<span class="keyword">False</span>)],PartPictureVariableUnknown()),</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;              ]</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;DeviceListSystem = [</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;              DeviceSystem([PartPropertyDescription(<span class="stringliteral">&#39;One Port System&#39;</span>),PartPropertyPorts(1)],PartPictureVariableSystem(1)),</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;              DeviceSystem([PartPropertyDescription(<span class="stringliteral">&#39;Two Port System&#39;</span>),PartPropertyPorts(2)],PartPictureVariableSystem(2)),</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;              DeviceSystem([PartPropertyDescription(<span class="stringliteral">&#39;Three Port System&#39;</span>),PartPropertyPorts(3)],PartPictureVariableSystem(3)),</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;              DeviceSystem([PartPropertyDescription(<span class="stringliteral">&#39;Four Port System&#39;</span>),PartPropertyPorts(4)],PartPictureVariableSystem(4)),</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;              DeviceSystem([PartPropertyDescription(<span class="stringliteral">&#39;Variable Port System&#39;</span>),PartPropertyPorts(4,<span class="keyword">False</span>)],PartPictureVariableSystem()),</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;              ]</div><div class="ttc" id="namespaceSignalIntegrity_1_1App_1_1SignalIntegrityAppHeadless_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1App_1_1SignalIntegrityAppHeadless.xhtml">SignalIntegrity.App.SignalIntegrityAppHeadless</a></div><div class="ttdef"><b>Definition:</b> <a href="SignalIntegrityAppHeadless_8py_source.xhtml#l00001">SignalIntegrityAppHeadless.py:1</a></div></div>
<div class="ttc" id="namespaceSignalIntegrity_1_1App_1_1DeviceNetListLine_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1App_1_1DeviceNetListLine.xhtml">SignalIntegrity.App.DeviceNetListLine</a></div><div class="ttdef"><b>Definition:</b> <a href="DeviceNetListLine_8py_source.xhtml#l00001">DeviceNetListLine.py:1</a></div></div>
<div class="ttc" id="namespaceSignalIntegrity_1_1App_1_1PartPicture_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1App_1_1PartPicture.xhtml">SignalIntegrity.App.PartPicture</a></div><div class="ttdef"><b>Definition:</b> <a href="PartPicture_8py_source.xhtml#l00001">PartPicture.py:1</a></div></div>
<div class="ttc" id="namespaceSignalIntegrity_1_1Lib_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib.xhtml">SignalIntegrity.Lib</a></div><div class="ttdef"><b>Definition:</b> <a href="Lib_2____init_____8py_source.xhtml#l00001">__init__.py:1</a></div></div>
<div class="ttc" id="namespaceSignalIntegrity_1_1App_1_1PartProperty_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1App_1_1PartProperty.xhtml">SignalIntegrity.App.PartProperty</a></div><div class="ttdef"><b>Definition:</b> <a href="PartProperty_8py_source.xhtml#l00001">PartProperty.py:1</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
