<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>SignalIntegrity: DeviceFactory Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="AppIcon2.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">SignalIntegrity
   &#160;<span id="projectnumber">1.1.7</span>
   </div>
   <div id="projectbrief">Signal Integrity Tools in Python</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceSignalIntegrity.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="namespaceSignalIntegrity_1_1Lib.xhtml">Lib</a></li><li class="navelem"><a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1Parsers.xhtml">Parsers</a></li><li class="navelem"><a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices.xhtml">Devices</a></li><li class="navelem"><a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser.xhtml">DeviceParser</a></li><li class="navelem"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory.xhtml">DeviceFactory</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">DeviceFactory Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>device class factory that produces devices  
 <a href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory.xhtml#details">More...</a></p>

<p>Inherits list.</p>
<div class="dynheader">
Collaboration diagram for DeviceFactory:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory__coll__graph.svg" width="166" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ae64f0875afe3067b97ba370b354b9213"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory.xhtml#ae64f0875afe3067b97ba370b354b9213">__init__</a> (self)</td></tr>
<tr class="memdesc:ae64f0875afe3067b97ba370b354b9213"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#ae64f0875afe3067b97ba370b354b9213">More...</a><br /></td></tr>
<tr class="separator:ae64f0875afe3067b97ba370b354b9213"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84bd6828768b3a1677c71d39f3cb91dd"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory.xhtml#a84bd6828768b3a1677c71d39f3cb91dd">MakeDevice</a> (self, ports, argsList, f)</td></tr>
<tr class="memdesc:a84bd6828768b3a1677c71d39f3cb91dd"><td class="mdescLeft">&#160;</td><td class="mdescRight">makes a device from a set of arguments  <a href="#a84bd6828768b3a1677c71d39f3cb91dd">More...</a><br /></td></tr>
<tr class="separator:a84bd6828768b3a1677c71d39f3cb91dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:ac43812121e594f158520698ba706118f"><td class="memItemLeft" align="right" valign="top"><a id="ac43812121e594f158520698ba706118f"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory.xhtml#ac43812121e594f158520698ba706118f">dev</a></td></tr>
<tr class="memdesc:ac43812121e594f158520698ba706118f"><td class="mdescLeft">&#160;</td><td class="mdescRight">instance of class <a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1SParameters.xhtml">SParameters</a> or list of list matrix when not frequency dependent. <br /></td></tr>
<tr class="separator:ac43812121e594f158520698ba706118f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3909d31bcdbe6e7a3450d1fa216755a2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices_1_1DeviceParser_1_1DeviceFactory.xhtml#a3909d31bcdbe6e7a3450d1fa216755a2">frequencyDependent</a></td></tr>
<tr class="memdesc:a3909d31bcdbe6e7a3450d1fa216755a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">boolean whether dev is frequency dependent.  <a href="#a3909d31bcdbe6e7a3450d1fa216755a2">More...</a><br /></td></tr>
<tr class="separator:a3909d31bcdbe6e7a3450d1fa216755a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>device class factory that produces devices </p>

<p class="definition">Definition at line <a class="el" href="DeviceParser_8py_source.xhtml#l00053">53</a> of file <a class="el" href="DeviceParser_8py_source.xhtml">DeviceParser.py</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ae64f0875afe3067b97ba370b354b9213"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae64f0875afe3067b97ba370b354b9213">&#9670;&nbsp;</a></span>__init__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def __init__ </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<p>list of devices</p>
<table class="doxtable">
<tr>
<th align="center">name </th><th align="center">ports</th><th align="center">arginname</th><th align="center">defaults </th><th align="center">frequency<br />
 dependent</th><th align="left">device  </th></tr>
<tr>
<td align="center">file </td><td align="center">any </td><td align="center">True </td><td align="center">filename=None </td><td align="center">True </td><td align="left">sp.dev.SParameterFile(filename,50.) </td></tr>
<tr>
<td align="center">c </td><td align="center">1 </td><td align="center">True </td><td align="center">c=None df=0 esr=0 z0=50 </td><td align="center">True </td><td align="left">sp.dev.TerminationC(f,c,z0,df,esr) </td></tr>
<tr>
<td align="center">c </td><td align="center">2 </td><td align="center">True </td><td align="center">c=None df=0 esr=0 z0=50 </td><td align="center">True </td><td align="left">sp.dev.SeriesC(f,c,z0,df,esr) </td></tr>
<tr>
<td align="center">l </td><td align="center">1 </td><td align="center">True </td><td align="center">l=None </td><td align="center">True </td><td align="left">sp.dev.TerminationL(f,l,z0) </td></tr>
<tr>
<td align="center">l </td><td align="center">2 </td><td align="center">True </td><td align="center">l=None </td><td align="center">True </td><td align="left">sp.dev.SeriesL(f,l,z0) </td></tr>
<tr>
<td align="center">r </td><td align="center">1 </td><td align="center">True </td><td align="center">r=None </td><td align="center">False </td><td align="left">dev.TerminationZ(r) </td></tr>
<tr>
<td align="center">r </td><td align="center">2 </td><td align="center">True </td><td align="center">r=None </td><td align="center">False </td><td align="left">dev.SeriesZ(r) </td></tr>
<tr>
<td align="center">rse </td><td align="center">2 </td><td align="center">True </td><td align="center">r=None </td><td align="center">True </td><td align="left">sp.dev.SeriesRse(r) </td></tr>
<tr>
<td align="center">shunt </td><td align="center">2-4 </td><td align="center">True </td><td align="center">r=None </td><td align="center">False </td><td align="left">dev.ShuntZ(ports,r) </td></tr>
<tr>
<td align="center">m </td><td align="center">4 </td><td align="center">True </td><td align="center">m=None </td><td align="center">True </td><td align="left">sp.dev.Mutual(f,m) </td></tr>
<tr>
<td align="center">ground </td><td align="center">1 </td><td align="center">False </td><td align="center"></td><td align="center">False </td><td align="left">dev.Ground() </td></tr>
<tr>
<td align="center">open </td><td align="center">1 </td><td align="center">False </td><td align="center"></td><td align="center">False </td><td align="left">dev.Open() </td></tr>
<tr>
<td align="center">thru </td><td align="center">2 </td><td align="center">False </td><td align="center"></td><td align="center">False </td><td align="left">dev.Thru() </td></tr>
<tr>
<td align="center">directional<br />
 coupler </td><td align="center">3-4 </td><td align="center">False </td><td align="center"></td><td align="center">False </td><td align="left">dev.DirectionalCoupler(ports) </td></tr>
<tr>
<td align="center">termination </td><td align="center">any </td><td align="center">False </td><td align="center"></td><td align="center">False </td><td align="left">zeros(shape=(ports,ports)).tolist() </td></tr>
<tr>
<td align="center">tee </td><td align="center">any </td><td align="center">False </td><td align="center"></td><td align="center">False </td><td align="left">dev.Tee(ports) </td></tr>
<tr>
<td align="center">mixedmode </td><td align="center">4 </td><td align="center">True </td><td align="center">'power' </td><td align="center">False </td><td align="left">dev.MixedModeConverter()<br />
 or dev.MixedModeConverterVoltage() </td></tr>
<tr>
<td align="center">ideal<br />
 transformer </td><td align="center">4 </td><td align="center">True </td><td align="center">tr=1 </td><td align="center">False </td><td align="left">dev.IdealTransformer(tr) </td></tr>
<tr>
<td align="center">voltage<br />
 controlled<br />
 voltage<br />
 source</td><td align="center">4 </td><td align="center">True </td><td align="center">gain=None </td><td align="center">False </td><td align="left">dev.VoltageControlledVoltageSource(gain) </td></tr>
<tr>
<td align="center">current<br />
 controlled<br />
 current<br />
 source</td><td align="center">4 </td><td align="center">True </td><td align="center">gain=None </td><td align="center">False </td><td align="left">dev.CurrentControlledCurrentSource(gain) </td></tr>
<tr>
<td align="center">current<br />
 controlled<br />
 voltage<br />
 source</td><td align="center">4 </td><td align="center">True </td><td align="center">gain=None </td><td align="center">False </td><td align="left">dev.CurrentControlledVoltageSource(gain) </td></tr>
<tr>
<td align="center">voltage<br />
 controlled<br />
 current<br />
 source</td><td align="center">4 </td><td align="center">True </td><td align="center">gain=None </td><td align="center">False </td><td align="left">dev.VoltageControlledCurrentSource(gain) </td></tr>
<tr>
<td align="center">voltage<br />
 amplifier </td><td align="center">2-4 </td><td align="center">False </td><td align="center">gain=None zo=0 zi=1e8 z0=50 </td><td align="center">False </td><td align="left">dev.VoltageAmplifier(ports,gain,zi,zo) </td></tr>
<tr>
<td align="center">current<br />
 amplifier </td><td align="center">2-4 </td><td align="center">False </td><td align="center">gain=None zo=1e8 zi=0 z0=50 </td><td align="center">False </td><td align="left">dev.CurrentAmplifier(ports,gain,zi,zo) </td></tr>
<tr>
<td align="center">transresistance<br />
 amplifier </td><td align="center">2-4 </td><td align="center">False </td><td align="center">gain=None zo=0 zi=0 z0=50 </td><td align="center">False </td><td align="left">dev.TransresistanceAmplifier(ports,gain,zi,zo) </td></tr>
<tr>
<td align="center">transconductance<br />
 amplifier </td><td align="center">2-4 </td><td align="center">False </td><td align="center">gain=None zo=1e8 zi=1e8 z0=50 </td><td align="center">False </td><td align="left">dev.TransconductanceAmplifier(ports,gain,zi,zo) </td></tr>
<tr>
<td align="center">opamp </td><td align="center">3 </td><td align="center">False </td><td align="center">zi=1e8 zd=1e8 zo=0 gain=1e8 z0=50 </td><td align="center">False </td><td align="left">dev.OperationalAmplifier(zi,zd,zo,gain,z0) </td></tr>
<tr>
<td align="center">tline </td><td align="center">2,4 </td><td align="center">False </td><td align="center">zc=50 td=0 </td><td align="center">True </td><td align="left">sp.dev.TLineLossless(f,ports,zc,td) </td></tr>
<tr>
<td align="center">telegrapher </td><td align="center">2 </td><td align="center">False </td><td align="center">r=0 rse=0 l=0 c=0 df=0 g=0 z0=50 sect=0 </td><td align="center">True </td><td align="left">sp.dev.TLineTwoPortRLGC(<br />
 f,r,rse,l,g,c,df,z0,sect,scale) </td></tr>
<tr>
<td align="center">telegrapher </td><td align="center">4 </td><td align="center">False </td><td align="center">rp=0 rsep=0 lp=0 cp=0<br />
 dfp=0 gp=0 rn=0 rsen=0<br />
 ln=0 cn=0 dfn=0 gn=0<br />
 lm 0 gm=0 z0=50<br />
 scale=1.0 sect=0 </td><td align="center">True </td><td align="left">sp.dev.TLineDifferentialRLGC(<br />
 f,rp,rsep,lp,gp,cp,dfp,<br />
 rn,rsen,ln,gn,cn,dfn,<br />
 cm,dfm,gm,lm,z0,sect,scale) </td></tr>
<tr>
<td align="center">rlgcfit </td><td align="center">2 </td><td align="center">False </td><td align="center">file=None scale=1.0 z0=50 </td><td align="center">True </td><td align="left">fit.RLGCFitFromFile(f,file,scale,Z0) </td></tr>
<tr>
<td align="center">shortstd </td><td align="center">1 </td><td align="center">False </td><td align="center">od=0 oz0=50 ol=0 l0=0<br />
 l1=0.0 l2=0 l3=0 </td><td align="center">True </td><td align="left">m.calkit.std.ShortStandard(f,od,oz0,ol,l0,l1,l2,l3) </td></tr>
<tr>
<td align="center">openstd </td><td align="center">1 </td><td align="center">False </td><td align="center">od=0 oz0=50 ol=0 c0=0<br />
 c1=0 c2=0 c3=0 </td><td align="center">True </td><td align="left">m.calkit.std.OpenStandard(f,od,oz0,ol,c0,c1,c2,c3) </td></tr>
<tr>
<td align="center">loadstd </td><td align="center">1 </td><td align="center">False </td><td align="center">od=0 oz0=50 ol=0 tz0=50 </td><td align="center">True </td><td align="left">m.calkit.std.LoadStandard(f,od,oz0,ol,tz0) </td></tr>
<tr>
<td align="center">thrustd </td><td align="center">2 </td><td align="center">False </td><td align="center">od=0 oz0=50 ol=0 </td><td align="center">True </td><td align="left">m.calkit.std.ThruStandard(f,od,oz0,ol) </td></tr>
</table>
<dl class="section note"><dt>Note</dt><dd>ports any mean None supplied. comma or dash separated ports are supplied as a string. </dd>
<dd>
arginname means the argument is supplied without a keyword. The first default argument has the actual name of the argument. </dd>
<dd>
frequency dependent devices usually come from 'sp.dev' meaning <a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1SParameters_1_1Devices.xhtml">SParameters.Devices</a> package. <a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1Parsers_1_1Devices.xhtml">Devices</a> that are not frequency dependent come from 'dev' meaning devices. 'm.calkit.std' refers to '<a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1Measurement_1_1CalKit_1_1Standards.xhtml">Measurement.CalKit.Standards</a>' package. </dd>
<dd>
Usually when an argument is defaulted to None, the device production will fail if the argument is not supplied - meaning the default value cannot be used. </dd></dl>

<p class="definition">Definition at line <a class="el" href="DeviceParser_8py_source.xhtml#l00103">103</a> of file <a class="el" href="DeviceParser_8py_source.xhtml">DeviceParser.py</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a84bd6828768b3a1677c71d39f3cb91dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a84bd6828768b3a1677c71d39f3cb91dd">&#9670;&nbsp;</a></span>MakeDevice()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def MakeDevice </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>ports</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>argsList</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>f</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>makes a device from a set of arguments </p>
<p>The device is assigned to self.dev and self.frequencyDependent determines whether the device is frequency dependent. Frequency dependent devices are assumed to be instances of the class <a class="el" href="namespaceSignalIntegrity_1_1Lib_1_1SParameters.xhtml">SParameters</a>. Otherwise, they are list of list matrices.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ports</td><td>integer number of ports </td></tr>
    <tr><td class="paramname">argsList</td><td>list of arguments. The name of the device is the first argument. If the device has no keyword for the argument, then that argument is next. Otherwise, besides the name and the argument with no keyword, the remaining arguments come in keyword/value pairs where the keyword is a string and the value is the value of the keyword. </td></tr>
    <tr><td class="paramname">f</td><td>list of frequencies </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>boolean whether the device was created. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">SignalIntegrityExceptionDeviceParser</td><td>if the device cannot be created. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="DeviceParser_8py_source.xhtml#l00211">211</a> of file <a class="el" href="DeviceParser_8py_source.xhtml">DeviceParser.py</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a3909d31bcdbe6e7a3450d1fa216755a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3909d31bcdbe6e7a3450d1fa216755a2">&#9670;&nbsp;</a></span>frequencyDependent</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">frequencyDependent</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>boolean whether dev is frequency dependent. </p>
<p>pragma: include </p>

<p class="definition">Definition at line <a class="el" href="DeviceParser_8py_source.xhtml#l00308">308</a> of file <a class="el" href="DeviceParser_8py_source.xhtml">DeviceParser.py</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>SignalIntegrity/SignalIntegrity/Lib/Parsers/Devices/<a class="el" href="DeviceParser_8py_source.xhtml">DeviceParser.py</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
