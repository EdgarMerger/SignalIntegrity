<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>SignalIntegrity: SignalIntegrity/SignalIntegrity/App/Simulator.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="AppIcon2.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">SignalIntegrity
   &#160;<span id="projectnumber">1.0.3</span>
   </div>
   <div id="projectbrief">Signal Integrity Tools in Python</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_16b8a29acabeefd95795d500a3b14bd8.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_fb554d60be346e469553b0331604b584.xhtml">SignalIntegrity</a></li><li class="navelem"><a class="el" href="dir_970ef3fb0b92f0060bb9423c44cad0f7.xhtml">App</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Simulator.py</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceSignalIntegrity_1_1App_1_1Simulator.xhtml">    1</a></span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="stringliteral">Simulator.py</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"># Copyright (c) 2018 Teledyne LeCroy, Inc.</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"># All rights reserved worldwide.</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">#</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"># This file is part of SignalIntegrity.</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">#</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"># SignalIntegrity is free software: You can redistribute it and/or modify it under the terms</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"># of the GNU General Public License as published by the Free Software Foundation, either</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"># version 3 of the License, or any later version.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">#</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"># This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"># without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"># See the GNU General Public License for more details.</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">#</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"># You should have received a copy of the GNU General Public License along with this program.</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"># If not, see &lt;https://www.gnu.org/licenses/&gt;</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">from</span> Tkinter <span class="keyword">import</span> Toplevel,Frame,PhotoImage,Menu,Button</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">from</span> Tkinter <span class="keyword">import</span> TOP,NO,RAISED,LEFT,X,NONE,BOTH</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">import</span> tkMessageBox</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">from</span> PartProperty <span class="keyword">import</span> PartPropertyPartName,PartPropertyReferenceDesignator,PartPropertyVoltageOffset</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">from</span> PartProperty <span class="keyword">import</span> PartPropertyTransresistance,PartPropertyVoltageGain,PartPropertyDelay</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">from</span> SParameterViewerWindow <span class="keyword">import</span> SParametersDialog</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">from</span> MenuSystemHelpers <span class="keyword">import</span> Doer</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">from</span> ProgressDialog <span class="keyword">import</span> ProgressDialog</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">from</span> FilePicker <span class="keyword">import</span> AskSaveAsFilename</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">from</span> ToSI <span class="keyword">import</span> FromSI,ToSI</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">import</span> matplotlib</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">import</span> sys</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">import</span> os</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keywordflow">if</span> <span class="keywordflow">not</span> <span class="stringliteral">&#39;matplotlib.backends&#39;</span> <span class="keywordflow">in</span> sys.modules:</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    matplotlib.use(<span class="stringliteral">&#39;TkAgg&#39;</span>)</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">from</span> matplotlib.backends.backend_tkagg <span class="keyword">import</span> FigureCanvasTkAgg</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">import</span> platform</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keywordflow">if</span> platform.system() == <span class="stringliteral">&#39;Linux&#39;</span>:</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keyword">from</span> matplotlib.backends.backend_tkagg <span class="keyword">import</span> NavigationToolbar2TkAgg</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keywordflow">else</span>:</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keyword">from</span> matplotlib.backends.backend_tkagg <span class="keyword">import</span> NavigationToolbar2Tk</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">from</span> matplotlib.figure <span class="keyword">import</span> Figure</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">class </span>SimulatorDialog(Toplevel):</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">def </span>__init__(self, parent):</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        Toplevel.__init__(self, parent.parent)</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        self.parent=parent</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        self.withdraw()</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        self.title(<span class="stringliteral">&#39;Simulation&#39;</span>)</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        img = PhotoImage(file=self.parent.parent.installdir+<span class="stringliteral">&#39;/icons/png/AppIcon2.gif&#39;</span>)</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        self.tk.call(<span class="stringliteral">&#39;wm&#39;</span>, <span class="stringliteral">&#39;iconphoto&#39;</span>, self._w, img)</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        self.protocol(<span class="stringliteral">&quot;WM_DELETE_WINDOW&quot;</span>, self.destroy)</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="comment"># the Doers - the holder of the commands, menu elements, toolbar elements, and key bindings</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        self.WaveformSaveDoer = Doer(self.onWriteSimulatorToFile).AddHelpElement(self.parent.parent.helpSystemKeys[<span class="stringliteral">&#39;Control-Help:Save-Waveforms&#39;</span>])</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="comment"># TODO: someday allow waveform reading</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        self.WaveformReadDoer = Doer(self.onReadSimulatorFromFile).AddHelpElement(self.parent.parent.helpSystemKeys[<span class="stringliteral">&#39;Control-Help:Read-Waveforms&#39;</span>]).Activate(<span class="keyword">False</span>)</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        self.Matplotlib2tikzDoer = Doer(self.onMatplotlib2TikZ).AddHelpElement(self.parent.parent.helpSystemKeys[<span class="stringliteral">&#39;Control-Help:Output-to-LaTeX&#39;</span>])</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="comment"># ------</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        self.CalculationPropertiesDoer = Doer(self.onCalculationProperties).AddHelpElement(self.parent.parent.helpSystemKeys[<span class="stringliteral">&#39;Control-Help:Calculation-Properties&#39;</span>])</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        self.ExamineTransferMatricesDoer = Doer(self.onExamineTransferMatrices).AddHelpElement(self.parent.parent.helpSystemKeys[<span class="stringliteral">&#39;Control-Help:View-Transfer-Parameters&#39;</span>])</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        self.SimulateDoer = Doer(self.parent.parent.onCalculate).AddHelpElement(self.parent.parent.helpSystemKeys[<span class="stringliteral">&#39;Control-Help:Recalculate&#39;</span>])</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="comment"># ------</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        self.HelpDoer = Doer(self.onHelp).AddHelpElement(self.parent.parent.helpSystemKeys[<span class="stringliteral">&#39;Control-Help:Open-Help-File&#39;</span>])</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        self.ControlHelpDoer = Doer(self.onControlHelp).AddHelpElement(self.parent.parent.helpSystemKeys[<span class="stringliteral">&#39;Control-Help:Control-Help&#39;</span>])</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="comment"># ------</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        self.EscapeDoer = Doer(self.onEscape).AddKeyBindElement(self,<span class="stringliteral">&#39;&lt;Escape&gt;&#39;</span>).DisableHelp()</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="comment"># The menu system</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        TheMenu=Menu(self)</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        self.config(menu=TheMenu)</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        FileMenu=Menu(self)</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        TheMenu.add_cascade(label=<span class="stringliteral">&#39;File&#39;</span>,menu=FileMenu,underline=0)</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        self.WaveformSaveDoer.AddMenuElement(FileMenu,label=<span class="stringliteral">&quot;Save Waveforms&quot;</span>,underline=0)</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        self.WaveformReadDoer.AddMenuElement(FileMenu,label=<span class="stringliteral">&quot;Read Waveforms&quot;</span>,underline=0)</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        FileMenu.add_separator()</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        self.Matplotlib2tikzDoer.AddMenuElement(FileMenu,label=<span class="stringliteral">&#39;Output to LaTeX (TikZ)&#39;</span>,underline=10)</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="comment"># ------</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        CalcMenu=Menu(self)</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        TheMenu.add_cascade(label=<span class="stringliteral">&#39;Calculate&#39;</span>,menu=CalcMenu,underline=0)</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        self.CalculationPropertiesDoer.AddMenuElement(CalcMenu,label=<span class="stringliteral">&#39;Calculation Properties&#39;</span>,underline=12)</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        self.ExamineTransferMatricesDoer.AddMenuElement(CalcMenu,label=<span class="stringliteral">&#39;View Transfer Parameters&#39;</span>,underline=0)</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        CalcMenu.add_separator()</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        self.SimulateDoer.AddMenuElement(CalcMenu,label=<span class="stringliteral">&#39;Recalculate&#39;</span>,underline=0)</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="comment"># ------</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        HelpMenu=Menu(self)</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        TheMenu.add_cascade(label=<span class="stringliteral">&#39;Help&#39;</span>,menu=HelpMenu,underline=0)</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        self.HelpDoer.AddMenuElement(HelpMenu,label=<span class="stringliteral">&#39;Open Help File&#39;</span>,underline=0)</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        self.ControlHelpDoer.AddMenuElement(HelpMenu,label=<span class="stringliteral">&#39;Control Help&#39;</span>,underline=0)</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="comment"># The Toolbar</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        ToolBarFrame = Frame(self)</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        ToolBarFrame.pack(side=TOP,fill=X,expand=NO)</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        self.WaveformReadDoer.AddToolBarElement(ToolBarFrame,iconfile=self.parent.parent.installdir+<span class="stringliteral">&#39;/icons/png/16x16/actions/document-open-2.gif&#39;</span>).Pack(side=LEFT,fill=NONE,expand=NO)</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        self.WaveformSaveDoer.AddToolBarElement(ToolBarFrame,iconfile=self.parent.parent.installdir+<span class="stringliteral">&#39;/icons/png/16x16/actions/document-save-2.gif&#39;</span>).Pack(side=LEFT,fill=NONE,expand=NO)</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        Frame(self,height=2,bd=2,relief=RAISED).pack(side=LEFT,fill=X,padx=5,pady=5)</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        self.CalculationPropertiesDoer.AddToolBarElement(ToolBarFrame,iconfile=self.parent.parent.installdir+<span class="stringliteral">&#39;/icons/png/16x16/actions/tooloptions.gif&#39;</span>).Pack(side=LEFT,fill=NONE,expand=NO)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        self.SimulateDoer.AddToolBarElement(ToolBarFrame,iconfile=self.parent.parent.installdir+<span class="stringliteral">&#39;/icons/png/16x16/actions/system-run-3.gif&#39;</span>).Pack(side=LEFT,fill=NONE,expand=NO)</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        Frame(ToolBarFrame,height=2,bd=2,relief=RAISED).pack(side=LEFT,fill=X,padx=5,pady=5)</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        self.HelpDoer.AddToolBarElement(ToolBarFrame,iconfile=self.parent.parent.installdir+<span class="stringliteral">&#39;/icons/png/16x16/actions/help-contents-5.gif&#39;</span>).Pack(side=LEFT,fill=NONE,expand=NO)</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        self.ControlHelpDoer.AddToolBarElement(ToolBarFrame,iconfile=self.parent.parent.installdir+<span class="stringliteral">&#39;/icons/png/16x16/actions/help-3.gif&#39;</span>).Pack(side=LEFT,fill=NONE,expand=NO)</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        self.f = Figure(figsize=(6,4), dpi=100)</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        self.plt = self.f.add_subplot(111)</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        self.plt.set_xlabel(<span class="stringliteral">&#39;time (ns)&#39;</span>)</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        self.plt.set_ylabel(<span class="stringliteral">&#39;amplitude&#39;</span>)</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        self.waveformList=<span class="keywordtype">None</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        self.waveformNamesList=<span class="keywordtype">None</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        self.canvas = FigureCanvasTkAgg(self.f, master=self)</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="comment">#canvas.show()</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        self.canvas.get_tk_widget().pack(side=TOP, fill=X, expand=1)</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keywordflow">if</span> platform.system() == <span class="stringliteral">&#39;Linux&#39;</span>:</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            toolbar = NavigationToolbar2TkAgg( self.canvas, self )</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keywordflow">else</span>:</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            toolbar = NavigationToolbar2Tk( self.canvas, self )</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        toolbar.update()</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        self.canvas._tkcanvas.pack(side=TOP, fill=BOTH, expand=1)</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        controlsFrame = Frame(self)</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        Button(controlsFrame,text=<span class="stringliteral">&#39;autoscale&#39;</span>,command=self.onAutoscale).pack(side=LEFT,expand=NO,fill=X)</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        controlsFrame.pack(side=TOP,fill=X,expand=NO)</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordflow">try</span>:</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            <span class="keyword">from</span> matplotlib2tikz <span class="keyword">import</span> save <span class="keyword">as</span> tikz_save</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <span class="keywordflow">except</span>:</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            self.Matplotlib2tikzDoer.Activate(<span class="keyword">False</span>)</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        self.ExamineTransferMatricesDoer.Activate(<span class="keyword">False</span>)</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        self.SimulateDoer.Activate(<span class="keyword">False</span>)</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        self.geometry(<span class="stringliteral">&quot;%+d%+d&quot;</span> % (self.parent.parent.root.winfo_x()+self.parent.parent.root.winfo_width()/2-self.winfo_width()/2,</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            self.parent.parent.root.winfo_y()+self.parent.parent.root.winfo_height()/2-self.winfo_height()/2))</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keyword">def </span>onAutoscale(self):</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        self.plt.autoscale(<span class="keyword">True</span>)</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        self.f.canvas.draw()</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keyword">def </span>UpdateWaveforms(self,waveformList, waveformNamesList):</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        self.lift(self.parent.parent)</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        self.plt.cla()</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        self.plt.set_ylabel(<span class="stringliteral">&#39;amplitude&#39;</span>,fontsize=10)</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.waveformList == <span class="keywordtype">None</span>:</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            self.plt.autoscale(<span class="keyword">False</span>)</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        self.waveformList=waveformList</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        self.waveformNamesList=waveformNamesList</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        mint=<span class="keywordtype">None</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        maxt=<span class="keywordtype">None</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <span class="keywordflow">for</span> wfi <span class="keywordflow">in</span> range(len(self.waveformList)):</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            wf=self.waveformList[wfi]</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            wfTimes=wf.Times()</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="keywordflow">if</span> len(wfTimes)==0:</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                <span class="keywordflow">continue</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            wfValues=wf.Values()</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            wfName=str(self.waveformNamesList[wfi])</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            mint=wfTimes[0] <span class="keywordflow">if</span> mint <span class="keywordflow">is</span> <span class="keywordtype">None</span> <span class="keywordflow">else</span> max(mint,wfTimes[0])</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            maxt=wfTimes[-1] <span class="keywordflow">if</span> maxt <span class="keywordflow">is</span> <span class="keywordtype">None</span> <span class="keywordflow">else</span> min(maxt,wfTimes[-1])</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        timeLabel=<span class="stringliteral">&#39;s&#39;</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        timeLabelDivisor=1.</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.waveformList <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            <span class="keywordflow">if</span> (<span class="keywordflow">not</span> mint <span class="keywordflow">is</span> <span class="keywordtype">None</span>) <span class="keywordflow">and</span> (<span class="keywordflow">not</span> maxt <span class="keywordflow">is</span> <span class="keywordtype">None</span>):</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                durLabelTime=(maxt-mint)</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                timeLabel=ToSI(durLabelTime,<span class="stringliteral">&#39;s&#39;</span>)[-2:]</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                timeLabelDivisor=FromSI(<span class="stringliteral">&#39;1. &#39;</span>+timeLabel,<span class="stringliteral">&#39;s&#39;</span>)</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                mint=mint/timeLabelDivisor</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                maxt=maxt/timeLabelDivisor</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            <span class="keywordflow">if</span> <span class="keywordflow">not</span> mint <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                self.plt.set_xlim(xmin=mint)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            <span class="keywordflow">if</span> <span class="keywordflow">not</span> maxt <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                self.plt.set_xlim(xmax=maxt)</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <span class="keywordflow">for</span> wfi <span class="keywordflow">in</span> range(len(self.waveformList)):</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            wf=self.waveformList[wfi]</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            wfTimes=wf.Times(timeLabelDivisor)</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            <span class="keywordflow">if</span> len(wfTimes)==0:</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                <span class="keywordflow">continue</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            wfValues=wf.Values()</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            wfName=str(self.waveformNamesList[wfi])</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            self.plt.plot(wfTimes,wfValues,label=wfName)</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        self.plt.set_xlabel(<span class="stringliteral">&#39;time (&#39;</span>+timeLabel+<span class="stringliteral">&#39;)&#39;</span>,fontsize=10)</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        self.plt.legend(loc=<span class="stringliteral">&#39;upper right&#39;</span>,labelspacing=0.1)</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        self.f.canvas.draw()</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        <span class="keywordflow">return</span> self</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keyword">def </span>onWriteSimulatorToFile(self):</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        <span class="keywordflow">for</span> wfi <span class="keywordflow">in</span> range(len(self.waveformNamesList)):</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            outputWaveformName=self.waveformNamesList[wfi]</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            outputWaveform=self.waveformList[wfi]</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            <span class="keywordflow">if</span> self.parent.parent.fileparts.filename==<span class="stringliteral">&#39;&#39;</span>:</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                filename=outputWaveformName</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            <span class="keywordflow">else</span>:</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                filename=self.parent.parent.fileparts.filename+<span class="stringliteral">&#39;_&#39;</span>+outputWaveformName</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            filename=AskSaveAsFilename(parent=self,filetypes=[(<span class="stringliteral">&#39;waveform&#39;</span>, <span class="stringliteral">&#39;.txt&#39;</span>)],</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                            defaultextension=<span class="stringliteral">&#39;.txt&#39;</span>,</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                            initialdir=self.parent.parent.fileparts.AbsoluteFilePath(),</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                            initialfile=filename+<span class="stringliteral">&#39;.txt&#39;</span>)</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            <span class="keywordflow">if</span> filename <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                <span class="keywordflow">continue</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            outputWaveform.WriteToFile(filename)</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <span class="keyword">def </span>onReadSimulatorFromFile(self):</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <span class="keywordflow">pass</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keyword">def </span>onCalculationProperties(self):</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        self.parent.parent.onCalculationProperties()</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <span class="comment">#self.parent.parent.calculationProperties.CalculationPropertiesDialog().lift(self)</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="keyword">def </span>onExamineTransferMatrices(self):</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        buttonLabelList=[[out+<span class="stringliteral">&#39; due to &#39;</span>+inp <span class="keywordflow">for</span> inp <span class="keywordflow">in</span> self.parent.sourceNames] <span class="keywordflow">for</span> out <span class="keywordflow">in</span> self.parent.outputWaveformLabels]</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        maxLength=len(max([item <span class="keywordflow">for</span> sublist <span class="keywordflow">in</span> buttonLabelList <span class="keywordflow">for</span> item <span class="keywordflow">in</span> sublist],key=len))</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        buttonLabelList=[[item.ljust(maxLength) <span class="keywordflow">for</span> item <span class="keywordflow">in</span> sublist] <span class="keywordflow">for</span> sublist <span class="keywordflow">in</span> buttonLabelList]</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        sp=self.parent.transferMatrices.SParameters()</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        SParametersDialog(self.parent.parent,sp,</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                          self.parent.parent.fileparts.FullFilePathExtension(<span class="stringliteral">&#39;s&#39;</span>+str(sp.m_P)+<span class="stringliteral">&#39;p&#39;</span>),</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                          <span class="stringliteral">&#39;Transfer Parameters&#39;</span>,buttonLabelList)</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="keyword">def </span>onMatplotlib2TikZ(self):</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        filename=AskSaveAsFilename(parent=self,filetypes=[(<span class="stringliteral">&#39;tex&#39;</span>, <span class="stringliteral">&#39;.tex&#39;</span>)],</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                                   defaultextension=<span class="stringliteral">&#39;.tex&#39;</span>,</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                                   initialdir=self.parent.parent.fileparts.AbsoluteFilePath(),</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                                   initialfile=self.parent.parent.fileparts.filename+<span class="stringliteral">&#39;Waveforms.tex&#39;</span>)</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <span class="keywordflow">if</span> filename <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            <span class="keywordflow">return</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        <span class="keywordflow">try</span>:</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            <span class="keyword">from</span> matplotlib2tikz <span class="keyword">import</span> save <span class="keyword">as</span> tikz_save</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            tikz_save(filename,figure=self.f,show_info=<span class="keyword">False</span>,float_format=<span class="stringliteral">&#39;%.6g&#39;</span>)</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            texfile=open(filename,<span class="stringliteral">&#39;rU&#39;</span>)</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            lines=[]</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            <span class="keywordflow">for</span> line <span class="keywordflow">in</span> texfile:</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                line=line.replace(<span class="stringliteral">&#39;\xe2\x88\x92&#39;</span>,<span class="stringliteral">&#39;-&#39;</span>)</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                lines.append(str(line))</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            texfile.close()</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            texfile=open(filename,<span class="stringliteral">&#39;w&#39;</span>)</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            <span class="keywordflow">for</span> line <span class="keywordflow">in</span> lines:</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                texfile.write(line)</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            texfile.close()</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <span class="keywordflow">except</span>:</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;            tkMessageBox.showerror(<span class="stringliteral">&#39;Export LaTeX&#39;</span>,<span class="stringliteral">&#39;LaTeX could not be generated or written &#39;</span>)</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <span class="keyword">def </span>onHelp(self):</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="keyword">import</span> webbrowser</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        helpfile=self.parent.parent.helpSystemKeys[<span class="stringliteral">&#39;sec:Simulator-Dialog&#39;</span>]</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <span class="keywordflow">if</span> helpfile <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            tkMessageBox.showerror(<span class="stringliteral">&#39;Help System&#39;</span>,<span class="stringliteral">&#39;Cannot find or open this help element&#39;</span>)</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            <span class="keywordflow">return</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        <span class="keywordflow">if</span> self.parent.parent.preferences.GetValue(<span class="stringliteral">&#39;OnlineHelp.UseOnlineHelp&#39;</span>):</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;            helpdir=self.parent.parent.preferences.GetValue(<span class="stringliteral">&#39;OnlineHelp.URL&#39;</span>)</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <span class="keywordflow">else</span>:</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            helpdir=self.parent.parent.installdir</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        url=helpdir+<span class="stringliteral">&#39;/Help/Help.html.LyXconv/&#39;</span>+helpfile</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        webbrowser.open(url)</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="keyword">def </span>onControlHelp(self):</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        Doer.inHelp=<span class="keyword">True</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        self.config(cursor=<span class="stringliteral">&#39;question_arrow&#39;</span>)</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <span class="keyword">def </span>onEscape(self):</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        Doer.inHelp=<span class="keyword">False</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        self.config(cursor=<span class="stringliteral">&#39;left_ptr&#39;</span>)</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    </div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="keyword">class </span>Simulator(object):</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <span class="keyword">def </span>__init__(self,parent):</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        self.parent=parent</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="keyword">def </span>SimulatorDialog(self):</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> hasattr(self,<span class="stringliteral">&#39;simulatorDialog&#39;</span>):</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;            self.simulatorDialog=SimulatorDialog(self)</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        <span class="keywordflow">if</span> self.simulatorDialog == <span class="keywordtype">None</span>:</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            self.simulatorDialog=SimulatorDialog(self)</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <span class="keywordflow">else</span>:</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.simulatorDialog.winfo_exists():</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                self.simulatorDialog=SimulatorDialog(self)</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        <span class="keywordflow">return</span> self.simulatorDialog</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <span class="keyword">def </span>UpdateWaveforms(self,outputWaveformList,outputWaveformLabels):</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        self.SimulatorDialog().UpdateWaveforms(outputWaveformList,outputWaveformLabels).state(<span class="stringliteral">&#39;normal&#39;</span>)</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <span class="keyword">def </span>_ProcessWaveforms(self,callback=None):</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <span class="keywordflow">return</span> self.transferMatriceProcessor.ProcessWaveforms(self.inputWaveformList)</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <span class="keyword">def </span>Simulate(self):</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        netList=self.parent.Drawing.schematic.NetList()</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        netListText=netList.Text()</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        <span class="keyword">import</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib.xhtml">SignalIntegrity.Lib</a> <span class="keyword">as</span> si</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        fd=si.fd.EvenlySpacedFrequencyList(</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;            self.parent.calculationProperties.endFrequency,</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;            self.parent.calculationProperties.frequencyPoints)</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        cacheFileName=<span class="keywordtype">None</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        <span class="keywordflow">if</span> self.parent.preferences.GetValue(<span class="stringliteral">&#39;Cache.CacheResults&#39;</span>):</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;            cacheFileName=self.parent.fileparts.FileNameTitle()</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        snp=si.p.SimulatorNumericParser(fd,cacheFileName=cacheFileName)</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        snp.AddLines(netListText)</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        progressDialog=ProgressDialog(self.parent,self.parent.installdir,<span class="stringliteral">&quot;Transfer Parameters&quot;</span>,snp,snp.TransferMatrices, granularity=10.0)</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        <span class="keywordflow">try</span>:</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            self.transferMatrices=progressDialog.GetResult()</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        <span class="keywordflow">except</span> si.SignalIntegrityException <span class="keyword">as</span> e:</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            tkMessageBox.showerror(<span class="stringliteral">&#39;Simulator&#39;</span>,e.parameter+<span class="stringliteral">&#39;: &#39;</span>+e.message)</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            <span class="keywordflow">return</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        <span class="comment">#self.transferMatrices.SParameters().WriteToFile(&#39;xfer.sXp&#39;)</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        self.outputWaveformLabels=netList.OutputNames()</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        <span class="keywordflow">try</span>:</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            self.inputWaveformList=self.parent.Drawing.schematic.InputWaveforms()</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;            self.sourceNames=netList.SourceNames()</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        <span class="keywordflow">except</span> si.SignalIntegrityException <span class="keyword">as</span> e:</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            tkMessageBox.showerror(<span class="stringliteral">&#39;Simulator&#39;</span>,e.parameter+<span class="stringliteral">&#39;: &#39;</span>+e.message)</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;            <span class="keywordflow">return</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        diresp=si.fd.Differentiator(fd).Response()</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        <span class="keywordflow">for</span> r <span class="keywordflow">in</span> range(len(self.outputWaveformLabels)):</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            <span class="keywordflow">for</span> c <span class="keywordflow">in</span> range(len(self.inputWaveformList)):</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                <span class="keywordflow">if</span> self.outputWaveformLabels[r][:3]==<span class="stringliteral">&#39;di/&#39;</span> <span class="keywordflow">or</span> self.outputWaveformLabels[r][:2]==<span class="stringliteral">&#39;d/&#39;</span>:</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                    <span class="comment">#print &#39;differentiate: &#39;+self.outputWaveformLabels[r]</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                    <span class="keywordflow">for</span> n <span class="keywordflow">in</span> range(len(self.transferMatrices.Matrices)):</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                        self.transferMatrices.Matrices[n][r][c]=self.transferMatrices.Matrices[n][r][c]*diresp[n]</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        self.transferMatriceProcessor=si.td.f.TransferMatricesProcessor(self.transferMatrices)</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        si.td.wf.Waveform.adaptionStrategy=<span class="stringliteral">&#39;Linear&#39;</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        progressDialog=ProgressDialog(self.parent,self.parent.installdir,<span class="stringliteral">&quot;Waveform Processing&quot;</span>,self.transferMatriceProcessor,self._ProcessWaveforms)</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;        <span class="keywordflow">try</span>:</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;            outputWaveformList = progressDialog.GetResult()</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        <span class="keywordflow">except</span> si.SignalIntegrityException <span class="keyword">as</span> e:</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;            tkMessageBox.showerror(<span class="stringliteral">&#39;Simulator&#39;</span>,e.parameter+<span class="stringliteral">&#39;: &#39;</span>+e.message)</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;            <span class="keywordflow">return</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        <span class="keywordflow">for</span> r <span class="keywordflow">in</span> range(len(outputWaveformList)):</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            <span class="keywordflow">if</span> self.outputWaveformLabels[r][:3]==<span class="stringliteral">&#39;di/&#39;</span> <span class="keywordflow">or</span> self.outputWaveformLabels[r][:2]==<span class="stringliteral">&#39;i/&#39;</span>:</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                <span class="comment">#print &#39;integrate: &#39;+self.outputWaveformLabels[r]</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                outputWaveformList[r]=outputWaveformList[r].Integral()</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        <span class="keywordflow">for</span> outputWaveformIndex <span class="keywordflow">in</span> range(len(outputWaveformList)):</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;            outputWaveform=outputWaveformList[outputWaveformIndex]</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            outputWaveformLabel = self.outputWaveformLabels[outputWaveformIndex]</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            <span class="keywordflow">for</span> device <span class="keywordflow">in</span> self.parent.Drawing.schematic.deviceList:</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                <span class="keywordflow">if</span> device[PartPropertyPartName().propertyName].GetValue() <span class="keywordflow">in</span> [<span class="stringliteral">&#39;Output&#39;</span>,<span class="stringliteral">&#39;DifferentialVoltageOutput&#39;</span>,<span class="stringliteral">&#39;CurrentOutput&#39;</span>]:</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                    <span class="keywordflow">if</span> device[PartPropertyReferenceDesignator().propertyName].GetValue() == outputWaveformLabel:</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                        <span class="comment"># probes may have different kinds of gain specified</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                        gainProperty = device[PartPropertyVoltageGain().propertyName]</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                        <span class="keywordflow">if</span> gainProperty <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                            gainProperty = device[PartPropertyTransresistance().propertyName]</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                        gain=gainProperty.GetValue()</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;                        offset=device[PartPropertyVoltageOffset().propertyName].GetValue()</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;                        delay=device[PartPropertyDelay().propertyName].GetValue()</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                        <span class="keywordflow">if</span> gain != 1.0 <span class="keywordflow">or</span> offset != 0.0 <span class="keywordflow">or</span> delay != 0.0:</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                            outputWaveform = outputWaveform.DelayBy(delay)*gain+offset</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                        outputWaveformList[outputWaveformIndex]=outputWaveform</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                        <span class="keywordflow">break</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        outputWaveformList = [wf.Adapt(</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;            si.td.wf.TimeDescriptor(wf.td.H,wf.td.K,self.parent.calculationProperties.userSampleRate))</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                <span class="keywordflow">for</span> wf <span class="keywordflow">in</span> outputWaveformList]</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        self.SimulatorDialog().title(<span class="stringliteral">&#39;Sim: &#39;</span>+self.parent.fileparts.FileNameTitle())</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;        self.SimulatorDialog().ExamineTransferMatricesDoer.Activate(<span class="keyword">True</span>)</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;        self.SimulatorDialog().SimulateDoer.Activate(<span class="keyword">True</span>)</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        self.UpdateWaveforms(outputWaveformList, self.outputWaveformLabels)</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    <span class="keyword">def </span>VirtualProbe(self):</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        netList=self.parent.Drawing.schematic.NetList()</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        netListText=netList.Text()</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        <span class="keyword">import</span> <a class="code" href="namespaceSignalIntegrity_1_1Lib.xhtml">SignalIntegrity.Lib</a> <span class="keyword">as</span> si</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;        cacheFileName=<span class="keywordtype">None</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        <span class="keywordflow">if</span> self.parent.preferences.GetValue(<span class="stringliteral">&#39;Cache.CacheResults&#39;</span>):</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;            cacheFileName=self.parent.fileparts.FileNameTitle()</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        snp=si.p.VirtualProbeNumericParser(</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;            si.fd.EvenlySpacedFrequencyList(</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                self.parent.calculationProperties.endFrequency,</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                self.parent.calculationProperties.frequencyPoints),</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;            cacheFileName=cacheFileName)</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        snp.AddLines(netListText)</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        progressDialog=ProgressDialog(self.parent,self.parent.installdir,<span class="stringliteral">&quot;Transfer Parameters&quot;</span>,snp,snp.TransferMatrices, granularity=10.0)</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        <span class="keywordflow">try</span>:</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;            self.transferMatrices=progressDialog.GetResult()</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        <span class="keywordflow">except</span> si.SignalIntegrityException <span class="keyword">as</span> e:</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;            tkMessageBox.showerror(<span class="stringliteral">&#39;Virtual Probe&#39;</span>,e.parameter+<span class="stringliteral">&#39;: &#39;</span>+e.message)</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;            <span class="keywordflow">return</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        self.transferMatriceProcessor=si.td.f.TransferMatricesProcessor(self.transferMatrices)</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;        si.td.wf.Waveform.adaptionStrategy=<span class="stringliteral">&#39;Linear&#39;</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        <span class="keywordflow">try</span>:</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;            self.inputWaveformList=self.parent.Drawing.schematic.InputWaveforms()</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;            self.sourceNames=netList.MeasureNames()</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        <span class="keywordflow">except</span> si.SignalIntegrityException <span class="keyword">as</span> e:</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;            tkMessageBox.showerror(<span class="stringliteral">&#39;Virtual Probe&#39;</span>,e.parameter+<span class="stringliteral">&#39;: &#39;</span>+e.message)</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;            <span class="keywordflow">return</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        progressDialog=ProgressDialog(self.parent,self.parent.installdir,<span class="stringliteral">&quot;Waveform Processing&quot;</span>,self.transferMatriceProcessor,self._ProcessWaveforms)</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        <span class="keywordflow">try</span>:</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;            outputWaveformList = progressDialog.GetResult()</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        <span class="keywordflow">except</span> si.SignalIntegrityException <span class="keyword">as</span> e:</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;            tkMessageBox.showerror(<span class="stringliteral">&#39;Virtual Probe&#39;</span>,e.parameter+<span class="stringliteral">&#39;: &#39;</span>+e.message)</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;            <span class="keywordflow">return</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        self.outputWaveformLabels=netList.OutputNames()</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;        <span class="keywordflow">for</span> outputWaveformIndex <span class="keywordflow">in</span> range(len(outputWaveformList)):</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;            outputWaveform=outputWaveformList[outputWaveformIndex]</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;            outputWaveformLabel = self.outputWaveformLabels[outputWaveformIndex]</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;            <span class="keywordflow">for</span> device <span class="keywordflow">in</span> self.parent.Drawing.schematic.deviceList:</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                <span class="keywordflow">if</span> device[PartPropertyPartName().propertyName].GetValue() <span class="keywordflow">in</span> [<span class="stringliteral">&#39;Output&#39;</span>,<span class="stringliteral">&#39;DifferentialVoltageOutput&#39;</span>,<span class="stringliteral">&#39;CurrentOutput&#39;</span>]:</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                    <span class="keywordflow">if</span> device[PartPropertyReferenceDesignator().propertyName].GetValue() == outputWaveformLabel:</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                        <span class="comment"># probes may have different kinds of gain specified</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                        gainProperty = device[PartPropertyVoltageGain().propertyName]</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                        <span class="keywordflow">if</span> gainProperty <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                            gainProperty = device[PartPropertyTransresistance().propertyName]</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;                        gain=gainProperty.GetValue()</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;                        offset=device[PartPropertyVoltageOffset().propertyName].GetValue()</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                        delay=device[PartPropertyDelay().propertyName].GetValue()</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                        <span class="keywordflow">if</span> gain != 1.0 <span class="keywordflow">or</span> offset != 0.0 <span class="keywordflow">or</span> delay != 0.0:</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                            outputWaveform = outputWaveform.DelayBy(delay)*gain+offset</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                        outputWaveformList[outputWaveformIndex]=outputWaveform</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                        <span class="keywordflow">break</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;        outputWaveformList = [wf.Adapt(</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;            si.td.wf.TimeDescriptor(wf.td.H,wf.td.K,self.parent.calculationProperties.userSampleRate))</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                <span class="keywordflow">for</span> wf <span class="keywordflow">in</span> outputWaveformList]</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        self.SimulatorDialog().title(<span class="stringliteral">&#39;Virtual Probe: &#39;</span>+self.parent.fileparts.FileNameTitle())</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        self.SimulatorDialog().ExamineTransferMatricesDoer.Activate(<span class="keyword">True</span>)</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;        self.SimulatorDialog().SimulateDoer.Activate(<span class="keyword">True</span>)</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;        self.UpdateWaveforms(outputWaveformList, self.outputWaveformLabels)</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div><div class="ttc" id="namespaceSignalIntegrity_1_1Lib_xhtml"><div class="ttname"><a href="namespaceSignalIntegrity_1_1Lib.xhtml">SignalIntegrity.Lib</a></div><div class="ttdef"><b>Definition:</b> <a href="Lib_2____init_____8py_source.xhtml#l00001">__init__.py:1</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
